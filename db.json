{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/lib/hint/hint.min.css","path":"lib/hint/hint.min.css","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/2021-03-01-Getting-Started.md","hash":"28e2e47e64d5264bbf1c508bc1f937554706ef87","modified":1625021705465},{"_id":"source/_posts/2021-04-06-Matlab设置颜色图范围.md","hash":"23f20c759e49661a9cf3dcaaf1b56ced3021eb77","modified":1623205569866},{"_id":"source/_posts/2021-04-06-Matlab颜色进阶.md","hash":"6e90cd88e9d370702e206e88caf25e251f5d22e6","modified":1623201677242},{"_id":"source/_posts/2021-05-14-python中的lambda和map函数.md","hash":"a97b6fa4b9622a93cb40f5960611cef098fef8c3","modified":1623201653034},{"_id":"source/_posts/2021-06-09-keras中LN层的使用.md","hash":"c4218eaa4c893dfca5b78cb719ff329e338a63da","modified":1623207274754},{"_id":"source/_posts/2021-06-20-信号处理傅里叶变换、短时傅里叶变换、小波变换、希尔伯特变换、希尔伯特黄变换.md","hash":"2b83f2e319f27af14f92df36f0dbb6fceed9248c","modified":1624160243126},{"_id":"source/_posts/_生成目录及插入图片.txt","hash":"4425e10d44887ad6135681a4714aedc7bbb568ac","modified":1623205825168},{"_id":"source/about/index.md","hash":"8382385e28851fcacab1170a806fe4edbfa9c5b0","modified":1625037416691},{"_id":"themes/fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":499162500000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":499162500000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":499162500000},{"_id":"themes/fluid/LICENSE","hash":"df5b54be535593d5442cebafbea34eb9bd69b987","modified":499162500000},{"_id":"themes/fluid/README.md","hash":"523b9db3801ca892124502c17d72864457cc4b21","modified":499162500000},{"_id":"themes/fluid/README_en.md","hash":"ca8fd19a4948de1f253616a62c0e8a7d81f692f5","modified":499162500000},{"_id":"themes/fluid/_config.yml","hash":"dac9d10d95b9e179e8cd7c439300b450db51f0c2","modified":499162500000},{"_id":"themes/fluid/gulpfile.js","hash":"a7c87a83becf7080bddd14e81a6f09ce8c3df109","modified":499162500000},{"_id":"themes/fluid/package.json","hash":"2b7625ea4dd5e7f3ff2f1ce4a4d25a52d3082d54","modified":1625019039391},{"_id":"themes/fluid/layout/404.ejs","hash":"689d9f4efd2a7f5edfd9b24561a7ade69d46617c","modified":499162500000},{"_id":"themes/fluid/layout/about.ejs","hash":"ad6fed7b646d3ca961db83db0fbe020e3a5d42ad","modified":499162500000},{"_id":"themes/fluid/layout/categories.ejs","hash":"6cbd88a2ef9dd2198d72ccc1899c4966ac5f49f9","modified":499162500000},{"_id":"themes/fluid/layout/category.ejs","hash":"58291dfec65c36889dfce0ddc603540b67e4c598","modified":499162500000},{"_id":"themes/fluid/layout/index.ejs","hash":"a154785aef120988d29409847977f24069d3a3d5","modified":499162500000},{"_id":"themes/fluid/layout/archive.ejs","hash":"472d0813ca5b88000a7bc6039f33b7e27b5a3216","modified":499162500000},{"_id":"themes/fluid/layout/layout.ejs","hash":"9d6ff8772bf54d7458ae4e846e5a2d1f2921b8a7","modified":499162500000},{"_id":"themes/fluid/layout/links.ejs","hash":"19c6db0ccebc8f59fa4ef9567a066b33223eccd6","modified":499162500000},{"_id":"themes/fluid/layout/page.ejs","hash":"1014b901d396f4fc445cb1ffc938d5380d894d71","modified":499162500000},{"_id":"themes/fluid/layout/post.ejs","hash":"79e3679a7069351a6172c281b9d09f59d7580484","modified":499162500000},{"_id":"themes/fluid/layout/tag.ejs","hash":"0ad89eb7c92a822980fa9a85285e6d94ad845d1d","modified":499162500000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":499162500000},{"_id":"themes/fluid/languages/de.yml","hash":"13a6a799415fc2f6f69ebd1a399fb44426a5d641","modified":499162500000},{"_id":"themes/fluid/languages/en.yml","hash":"a85dcc5cc21f9cab50df31e5001b8818ee62d1e2","modified":499162500000},{"_id":"themes/fluid/languages/eo.yml","hash":"a0c7984495d4f2d33b64adfa33adebbf768a5ac3","modified":499162500000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"21307b4137c3d9b04bb58243747e75af0abc5a71","modified":499162500000},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"1a6d415446da11dee5c5f400e7d67544fbe743ea","modified":499162500000},{"_id":"themes/fluid/languages/ja.yml","hash":"91020031a847c0361a6fd7ab990c7be4bf17529b","modified":499162500000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16d33eb89ecf90f4046720fde5395d972c7ba1fd","modified":499162500000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"af977ed0792508bb0766ea8afe82d34ef1e8fb3c","modified":499162500000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":499162500000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":499162500000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":499162500000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":499162500000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":499162500000},{"_id":"themes/fluid/.github/workflows/lint.yaml","hash":"64d521c9c5b61d3a4852c74894fb574082dc7009","modified":499162500000},{"_id":"themes/fluid/layout/_partial/archive-list.ejs","hash":"8723aa57f61134a2c1dc84cc7ea88ea366f4fda3","modified":499162500000},{"_id":"themes/fluid/layout/_partial/beian.ejs","hash":"6ec30a9dd56341590af07f4227324f619025c109","modified":499162500000},{"_id":"themes/fluid/layout/_partial/footer.ejs","hash":"39e63b3e1502803c9e8ea0c44ea662a7bbe15744","modified":499162500000},{"_id":"themes/fluid/layout/_partial/css.ejs","hash":"cdcb607f1104543a42beda647f3c9cf0f3d11623","modified":499162500000},{"_id":"themes/fluid/layout/_partial/head.ejs","hash":"248ecd01aead6e07ac1904a7b7c45395a922bcc7","modified":499162500000},{"_id":"themes/fluid/layout/_partial/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":499162500000},{"_id":"themes/fluid/layout/_partial/post-meta.ejs","hash":"3e0fa1731b6e54dbcf52ccf8e200e83dc4549bfa","modified":499162500000},{"_id":"themes/fluid/layout/_partial/scripts.ejs","hash":"b3d93135d9ae74f006da31ec54343308bbd77cb5","modified":499162500000},{"_id":"themes/fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":499162500000},{"_id":"themes/fluid/layout/_partial/nav.ejs","hash":"245f49aad0e4124b52aa82d981281ad9c871f1f8","modified":499162500000},{"_id":"themes/fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":499162500000},{"_id":"themes/fluid/layout/_partial/toc.ejs","hash":"3d2fb5552f373e5a0c56bc356702d807bcbcb411","modified":499162500000},{"_id":"themes/fluid/scripts/events/index.js","hash":"44faef3e77ab08b91e4c5c6f1cd9087a9faff443","modified":499162500000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":499162500000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"6c37e9f1ac1d6d00b3c32794e02e244dba942cd9","modified":499162500000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":499162500000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":499162500000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"606131cb807846bf43776a9073fcc1473d359ec9","modified":499162500000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":499162500000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"9045f47c7a71aab39f16cffb3e3847b752c2e0f1","modified":499162500000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"e58d422eddb44c1be893f65f79f4c7feecfe6d5f","modified":499162500000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"99ab4551dc9c035abcc3bf4da5def2f63449d7ec","modified":499162500000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":499162500000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"63468f7875c09d9557fe8315afc97175745d9087","modified":499162500000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":499162500000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":499162500000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":499162500000},{"_id":"themes/fluid/scripts/utils/join-path.js","hash":"629e7deb3955f750c1cfa6fc773f412e020fcef4","modified":499162500000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":499162500000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"649457796374c79e49a19bd541e4ad8e78fe8995","modified":499162500000},{"_id":"themes/fluid/source/css/main.styl","hash":"d5a8a59c8d1fd17d699a951e59c4ce9ae44c419d","modified":499162500000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":499162500000},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":499162500000},{"_id":"themes/fluid/source/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":499162500000},{"_id":"themes/fluid/source/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":499162500000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":499162500000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":499162500000},{"_id":"themes/fluid/source/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":499162500000},{"_id":"themes/fluid/source/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":499162500000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":499162500000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"b7985ac3cff9ee2722db43ee6b32b5484c43f5f2","modified":499162500000},{"_id":"themes/fluid/source/js/local-search.js","hash":"bf00f5786bb8de7241f635455b67243d26656222","modified":499162500000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"cc712fc71bf33d561e1ba74fe1d52d2353092171","modified":499162500000},{"_id":"themes/fluid/source/js/plugins.js","hash":"342b1fbc30d1465687ce389a4e07f967266d5d86","modified":499162500000},{"_id":"themes/fluid/source/js/utils.js","hash":"9d492fab9c26311ad0ab553c890e09b9575a76f2","modified":499162500000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/changyan.ejs","hash":"725a1fe23c672fca87edc57739b748c3adf705da","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/disqus.ejs","hash":"fb4502fc9204284f8b4e8dabde8477d478e826e5","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/twikoo.ejs","hash":"ffe08e76c9ebd4fc27715b8a60f385b3f10d0348","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/valine.ejs","hash":"9238063c5e2928bb6fce2b99cd25ad85e78c4d1c","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/waline.ejs","hash":"5b61661fbc65752f54f99402077dbb03044149a1","modified":499162500000},{"_id":"themes/fluid/layout/_partial/comments/utterances.ejs","hash":"e1ed6530dfd7310f91060a75766a93ac3c39be3a","modified":499162500000},{"_id":"themes/fluid/layout/_partial/plugins/math.ejs","hash":"76c4e0608ae362a265ac5e9c0fc49f75c1bc568e","modified":499162500000},{"_id":"themes/fluid/layout/_partial/plugins/analytics.ejs","hash":"557077a8825fffc0a2c7fe2b29f319287950244f","modified":499162500000},{"_id":"themes/fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":499162500000},{"_id":"themes/fluid/layout/_partial/plugins/typed.ejs","hash":"ab71df2e56b60e8e193ff827e81704e5b358a977","modified":499162500000},{"_id":"themes/fluid/layout/_partial/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":499162500000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"b5fd5a2d9c463eb59318af0f47c591c485b6ad27","modified":499162500000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"3b2abc5f5e3b681874637e98e047dc4969eb1983","modified":499162500000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"28e186c32576eb3d5d923273471a001c47fe8071","modified":499162500000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"deed966f38cf0c8dee3f72e5b1f2e878510db0e1","modified":499162500000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"a2d08e3b9f98b6371b2e64d664f079c99571494b","modified":499162500000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"c1db1a4f9eca6e36b660530641e3a4fb6a30c8d8","modified":499162500000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":499162500000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":499162500000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"26d29403d8ecb0b533e63bde3ca73b2c91f171ff","modified":499162500000},{"_id":"themes/fluid/source/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"15d2786d00418e61022475194ad76445d68e27ea","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"32fb938d72b2d86159cb315a98b086bd17fa4415","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"d547ab0b91f84eb0acd0bc0c5d716ce17c30361a","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/rewrite.styl","hash":"4c6fffc6d4a3b8830931800ee7da99dccf1be36e","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"6e6f22b664199772370b59ce1678b0c148b5849f","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"ad7dcc8a060d94d3c44ca5e0788a24ca38be0f79","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_post/post.styl","hash":"3a6b4f8a29648d9d2c1e99b52a7b42df3f15cf62","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"cd4ebb1426abed9fda93b797b02c6d5dd71dc2a1","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_post/tag_plugin.styl","hash":"766fcf017deb4c8b0c260ac4c8d2e3489407ad89","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"dabd87267d60240c0daea0f35a46f30ee1b2337a","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"30f8fab95a5214d79df0ccc02b937df8bd885676","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"9f932ca3f9625c13aa5353f58319881e62c0c653","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"32d90bcc8bf2fd5d8d78e86a567973d4b69bcfa1","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"35539a1ce8476e75515015a06d01ec66e4af6834","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"461d609a802a4f9aa9f492411ed8074813a956b7","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"d8011325756eb6e4ce619b3e7b4d6d80c2de8a57","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"55e10a6965462f8f62f85e75fd5e143af02a4b44","modified":499162500000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":499162500000},{"_id":"public/local-search.xml","hash":"a0592ad8b1a72ffb2edda50685cebf3257fcba3f","modified":1625056580034},{"_id":"public/about/index.html","hash":"c9abdeb15530a728e6daeafad865a8ec9829c70e","modified":1625056580034},{"_id":"public/archives/index.html","hash":"cea1d76f944375307e138ec9960747aecd74c434","modified":1625056580034},{"_id":"public/archives/2021/index.html","hash":"cea1d76f944375307e138ec9960747aecd74c434","modified":1625056580034},{"_id":"public/archives/2021/03/index.html","hash":"96d2c3fa3a6c99948a2c655c933ca8b0f3d45cfb","modified":1625056580034},{"_id":"public/archives/2021/04/index.html","hash":"25096b2c2bc873a79217e881cdbe08d483f83228","modified":1625056580034},{"_id":"public/archives/2021/05/index.html","hash":"c9e38ad6abc329bb4719eb4cea44044b69101880","modified":1625056580034},{"_id":"public/archives/2021/06/index.html","hash":"38fba3bd5dfcd8427664753748efde0e2ac897da","modified":1625056580034},{"_id":"public/categories/jekyll-update/index.html","hash":"6ad32625a0a4365470bd3e6f74aec59a7f240e29","modified":1625056580034},{"_id":"public/tags/getting-started/index.html","hash":"24bae22aa7ddb08bb8eeafc828c5f7cd9e437cf3","modified":1625056580034},{"_id":"public/tags/Matlab/index.html","hash":"e19169a15c826c23a6d0ad477bbafa2a73ce08ef","modified":1625056580034},{"_id":"public/tags/surf/index.html","hash":"3c5e121ee10e7e4fe92e5dac7d9f6c94c3b46d37","modified":1625056580034},{"_id":"public/tags/color/index.html","hash":"06bd9f3fc077c692b82064e8d2c05126b96cc3f8","modified":1625056580034},{"_id":"public/tags/python/index.html","hash":"11e08501ce5eb0f814ccb248a2ed168099d218aa","modified":1625056580034},{"_id":"public/tags/lambda/index.html","hash":"132651c85c7632d9b45e002fa058e9ea2f6d3933","modified":1625056580034},{"_id":"public/tags/map/index.html","hash":"3808bcc1db07acab17e685a81551453834055972","modified":1625056580034},{"_id":"public/tags/Keras/index.html","hash":"7206f38cd6ed7ad54b17ccf88798e9e31e743d0f","modified":1625056580034},{"_id":"public/tags/LN/index.html","hash":"159561738eada2c81c3ce0acc7d3123c427cc42d","modified":1625056580034},{"_id":"public/tags/FFT/index.html","hash":"00819d68f9bcea458bf61d717d48a612634c21f9","modified":1625056580034},{"_id":"public/tags/STFT/index.html","hash":"75cabb216ce9c2870606756db3d5f003460e026b","modified":1625056580034},{"_id":"public/tags/WT/index.html","hash":"45ca99a7755d04783b71a92fbf1a62866a6987f1","modified":1625056580034},{"_id":"public/tags/HT/index.html","hash":"047ea48a2aecdd1e3b7fd27c977cfbf8185d9c7b","modified":1625056580034},{"_id":"public/tags/HHT/index.html","hash":"d60a522dca947815bc0b1ca2adc2bafdf0edf181","modified":1625056580034},{"_id":"public/tags/signal-processing/index.html","hash":"9fc0daf0264d4840b528cdc5a385421f5391b179","modified":1625056580034},{"_id":"public/tags/transparency/index.html","hash":"199d491a7325ce70a99f78daebb431393a2e911a","modified":1625056580034},{"_id":"public/404.html","hash":"1991334e0af3eb6c1720c20bfa1a8dabbfd26f59","modified":1625056580034},{"_id":"public/tags/index.html","hash":"705ade57e22a9f9be0dd36d4e0fb6acffb5a5563","modified":1625056580034},{"_id":"public/categories/index.html","hash":"288878308cf8e1fe57774a84c533dcb6214baa61","modified":1625056580034},{"_id":"public/links/index.html","hash":"96a1d971907351a2ab2979b4332e81681c047947","modified":1625056580034},{"_id":"public/2021/06/20/信号处理傅里叶变换、短时傅里叶变换、小波变换、希尔伯特变换、希尔伯特黄变换/index.html","hash":"27f929244884792aa06bf927e47d438d24177b70","modified":1625056580034},{"_id":"public/2021/06/09/keras中LN层的使用/index.html","hash":"241eeb57a3fe9b8455b3f668e1a830d18b348d87","modified":1625056580034},{"_id":"public/2021/05/14/python中的lambda和map函数/index.html","hash":"8d01699d4d4c0ec8e1bf261cee2b432cf4ba47b4","modified":1625056580034},{"_id":"public/2021/04/06/Matlab设置颜色图范围/index.html","hash":"b8d8e7a16f664ba3cd27a38a49ea0cbec89dd8b7","modified":1625056580034},{"_id":"public/2021/04/06/Matlab颜色进阶/index.html","hash":"33a98438a9bc19e0b11c9ac45551680a4de2dfee","modified":1625056580034},{"_id":"public/2021/03/01/Getting-Started/index.html","hash":"ee0948ca086aa954e77dd87dddb747c6248eb28c","modified":1625056580034},{"_id":"public/index.html","hash":"32bd3d9e59f8dadac158dd13e7e281b162256dd4","modified":1625056580034},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1625056580034},{"_id":"public/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1625056580034},{"_id":"public/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1625056580034},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1625056580034},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1625056580034},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1625056580034},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1625056580034},{"_id":"public/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1625056580034},{"_id":"public/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1625056580034},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1625056580034},{"_id":"public/js/local-search.js","hash":"bf00f5786bb8de7241f635455b67243d26656222","modified":1625056580034},{"_id":"public/js/color-schema.js","hash":"cc712fc71bf33d561e1ba74fe1d52d2353092171","modified":1625056580034},{"_id":"public/js/leancloud.js","hash":"b7985ac3cff9ee2722db43ee6b32b5484c43f5f2","modified":1625056580034},{"_id":"public/js/plugins.js","hash":"342b1fbc30d1465687ce389a4e07f967266d5d86","modified":1625056580034},{"_id":"public/js/utils.js","hash":"9d492fab9c26311ad0ab553c890e09b9575a76f2","modified":1625056580034},{"_id":"public/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1625056580034},{"_id":"public/css/main.css","hash":"be9a0652de06d61fa26f4b4128b29bcc5a4a0ad7","modified":1625056580034}],"Category":[{"name":"jekyll update","_id":"ckqjgqagc0003dsmpguy73gnk"}],"Data":[],"Page":[{"title":"about","date":"2021-06-30T02:16:37.000Z","layout":"about","_content":"\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-06-30 10:16:37\nlayout: about\n---\n\n","updated":"2021-06-30T07:16:56.691Z","path":"about/index.html","comments":1,"_id":"ckqjgqag50000dsmp2x8b6el4","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Getting Started：使用Jekyll创建GitHub Pages站点搭建博客（Windows）","author":"Shi Daming","date":"2021-03-01T09:00:00.000Z","pin":true,"_content":"**目录**\n\n\\- [一、必要组件的安装](#一必要组件的安装)\n\n\\- [二、网站托管（在Github上创建自己的repo）](#二网站托管在github上创建自己的repo)\n\n\\- [三、基于Jekyll模板建立网站](#三基于jekyll模板建立网站)\n\n\\- [四、Jekyll目录结构](#四jekyll目录结构)\n\n### 一、必要组件的安装\n\n需要首先安装以下内容\n\n- **Ruby** - [是一种面向对象]()、命令式、函数式、动态的通用编程语言。Windows下直接下载安装即可[Ruby installer](https://rubyinstaller.org/)。注意，如遇报错，可能需要将安装目录（xxx\\Ruby27-x64\\bin）加入系统环境变量PATH。\n\n- **Bundler** - 是一个官方推荐的Ruby gem包管理软件，可以减少Jekyll的编译错误，和环境依赖相关的bug，相关链接[Bundler](https://bundler.io/)。只需在终端中运行以下两步：\n\n  1.安装bundler\n\n  ```\n  gem install bundler\n  ```\n\n  2.指定源\n\n  ```\n  gem sources 'https://rubygems.org'\n  ```\n\n- **Jekyll** -相当于一个编译工具，安装好jekyll后，你可以通过jekyll创建一个网站模板从而在本地进行预览，而不用上传至Github后再进行查看，此软件包将在之后的步骤中自动安装。\n\n### 二、网站托管（在Github上创建自己的repo）\n\ngithub.io是完全基于github创建的，其本质上是在你的github账户下创建一个特殊的repo。你可以参照如下步骤完成：\n\n- 创建repo\n\n  登陆你的账户后，创建一个新的repo。请务必注意该repo的名字，必须保持格式`<username>.github.io`，其中 `<username） 替换成你的github账户名。\n\n- 把repo clone到本地\n\n  在目录下新建一个index.html的文件,在里面输入任意内容，然后再把代码push送到github上。\n\n- 测试地址\n\n  浏览器里访问<u>https://(username).github.io/</u>,可以发现这个url可以被访问了。\n\n到这里，一个免费且无限流量的Github代码托管仓库就创建完成了。\n\n### 三、基于Jekyll模板建立网站\n\n为了在发布前预览自己的网站，我们需要使用Jekyll，同时它也能为我们提供很多模板。\n\n1. 首先点击前往[jekyll 主题官网](http://jekyllthemes.org/)。\n\n2. 然后选择一个自己喜欢的主题模板，比如[Chirpy](http://jekyllthemes.org/themes/jekyll-theme-chirpy/)。\n\n3. 点击Download下载该模板至repo的本地目录，注意确保根目录下含有Gemfile这个文件。\n\n   <img src=\"/images/QQ截图20210308194033.png\"/>\n\n   注意插入图片时需要将图片文件放入assets文件夹，在md文件中由于路径不一致会无法正常显示，在网页中是正常的，无须担心。\n\n4. 在本地repo目录下打开命令窗口并运行\n\n   ```\n   bundle install\n   ```\n\n   自动安装所有依赖的环境\n\n5. 最后一步，开启测试\n\n   ```\n   bundle exec jekyll serve\n   ```\n\n   成功运行之后，我们就可以通过http://127.0.0.1:4000/在本地访问创建的网站了。此时可以随时更改网站内容，并能实现自动实时更新。\n\n### 四、Jekyll目录结构\n\n​\tJekyll使用Ruby脚本根据模板生成静态网页，实现了内容与排版的分离。模板以嵌入[Liquid](https://shopify.github.io/liquid/)脚本的HTML格式存放。内容为markdown或者html。为了撰写自己的博客，需要对模板内容进行修改。\n\nJekyll模板通常包含的目录结构：\n\n```\n    _posts 博客内容\n    _pages 其他需要生成的网页，如About页\n    _layouts 网页排版模板\n    _includes 被模板包含的HTML片段，可在_config.yml中修改位置\n    assets 辅助资源 css布局 js脚本 图片等\n    _data 动态数据\n    _sites 最终生成的静态网页\n    _config.yml 网站的一些配置信息\n    index.html 网站的入口\n```\n\n1. 我们打开根目录下的index.html可以看到：\n\n   ```html\n   ---\n   layout: home\n   # Index page\n   ---\n   ```\n\n2. 上面的home我们到_layouts目录下可以找到：\n\n   ```html\n   ---\n   layout: page\n   # The Home page layout\n   ---\n   \n   {% raw %}\n   {% assign pinned = site.posts | where_exp: \"item\", \"item.pin == true\"  %}\n   {% assign default = site.posts | where_exp: \"item\", \"item.pin != true\"  %}\n   {% assign posts = \"\" | split: \"\" %}\n   ...\n      <div class=\"post-meta text-muted d-flex justify-content-between\">\n   \n         <div>\n           <!-- posted date -->\n           <i class=\"far fa-calendar fa-fw\"></i>\n           {% include timeago.html date=post.date tooltip=true %}\n   \n           <!-- time to read -->\n           <i class=\"far fa-clock fa-fw\"></i>\n           {% include read-time.html content=post.content %}\n   \n           <!-- page views -->\n           {% if site.google_analytics.pv.enabled %}\n           <i class=\"far fa-eye fa-fw\"></i>\n           <span id=\"pv_{{-post.title-}}\" class=\"pageviews\">\n             <i class=\"fas fa-spinner fa-spin fa-fw\"></i>\n           </span>\n           {% endif %}\n         </div>\n   \n         {% if post.pin %}\n         <div class=\"pin\">\n           <i class=\"fas fa-thumbtack fa-fw\"></i>\n           <span>{{ site.data.label.pin_prompt | default: 'Pinned' }}</span>\n         </div>\n         {% endif %}\n   \n       </div> <!-- .post-meta -->\n   \n     </div> <!-- .post-review -->\n   \n   {% endfor %}\n   \n   </div> <!-- #post-list -->\n   \n   {% if paginator.total_pages > 0 %}\n     {% include post-paginator.html %}\n   {% endif %}\n   {% endraw %}\n   ```\n\n   实际上根目录下index.html运行后是home里面的代码内容，1中**html代码段**会填充的上图中的**content**位置。jekyll是将分散在各个目录下的html文件拼接起来运行。\n\n3. 上图的page布局也可以在_layouts目录下找到：\n\n   ```html\n   ---\n   layout: default\n   # The page layout\n   ---\n   {% raw %}\n   <div class=\"row\">\n     <div class=\"col-12 col-lg-11 col-xl-8\">\n       <div id=\"page\" class=\"post pb-5 pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4 mb-md-4\">\n       {% if page.dynamic_title %}\n         <h1 class=\"dynamic-title\">{{ page.title }}</h1>\n         <div class=\"post-content\">\n           {{ content }}\n         </div>\n       {% else %}\n         {{ content }}\n       {% endif %}\n       </div> <!-- #page -->\n     </div><!-- .col-12 -->\n   \n     {% include panel.html %}\n   \n   </div>\n   \n   {% if site.disqus.comments and page.comments %}\n   <div class=\"row\">\n     <div class=\"col-12 col-lg-11 col-xl-8\">\n       <div class=\"pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4\">\n   \n       {% include disqus.html %}\n   \n       </div> <!-- .pl-1 pr-1 -->\n     </div> <!-- .col-12 -->\n   </div> <!-- .row -->\n   {% endif %}\n   {% endraw %}\n   ```\n\n   关于Jekyll的更详细用法可以参考[官方网站](http://jekyllcn.com/docs/home/)\n\n   ps: \n\n   - GitHub Page 的（一种）输入是 markdown 文件，输出是 HTML/CSS/JS 文件。\n- 如果 markdown 文件包含代码块，且代码块中包含花括号 { 或 }，尤其是包含 { % 或 { { 符号组合时，GitHub Page 会报错。\n   - 在代码前后添加{ % raw % }和{ % endraw % }（去掉大括号内的空格）\n- 新版本Google Analytics的Tracking ID在管理→媒体资源→数据流中，也可以直接搜索。","source":"_posts/2021-03-01-Getting-Started.md","raw":"---\ntitle: Getting Started：使用Jekyll创建GitHub Pages站点搭建博客（Windows）\nauthor: Shi Daming\ndate: 2021-03-01 17:00:00 +0800\ncategories: jekyll update\ntags: [getting started]\npin: true\n---\n**目录**\n\n\\- [一、必要组件的安装](#一必要组件的安装)\n\n\\- [二、网站托管（在Github上创建自己的repo）](#二网站托管在github上创建自己的repo)\n\n\\- [三、基于Jekyll模板建立网站](#三基于jekyll模板建立网站)\n\n\\- [四、Jekyll目录结构](#四jekyll目录结构)\n\n### 一、必要组件的安装\n\n需要首先安装以下内容\n\n- **Ruby** - [是一种面向对象]()、命令式、函数式、动态的通用编程语言。Windows下直接下载安装即可[Ruby installer](https://rubyinstaller.org/)。注意，如遇报错，可能需要将安装目录（xxx\\Ruby27-x64\\bin）加入系统环境变量PATH。\n\n- **Bundler** - 是一个官方推荐的Ruby gem包管理软件，可以减少Jekyll的编译错误，和环境依赖相关的bug，相关链接[Bundler](https://bundler.io/)。只需在终端中运行以下两步：\n\n  1.安装bundler\n\n  ```\n  gem install bundler\n  ```\n\n  2.指定源\n\n  ```\n  gem sources 'https://rubygems.org'\n  ```\n\n- **Jekyll** -相当于一个编译工具，安装好jekyll后，你可以通过jekyll创建一个网站模板从而在本地进行预览，而不用上传至Github后再进行查看，此软件包将在之后的步骤中自动安装。\n\n### 二、网站托管（在Github上创建自己的repo）\n\ngithub.io是完全基于github创建的，其本质上是在你的github账户下创建一个特殊的repo。你可以参照如下步骤完成：\n\n- 创建repo\n\n  登陆你的账户后，创建一个新的repo。请务必注意该repo的名字，必须保持格式`<username>.github.io`，其中 `<username） 替换成你的github账户名。\n\n- 把repo clone到本地\n\n  在目录下新建一个index.html的文件,在里面输入任意内容，然后再把代码push送到github上。\n\n- 测试地址\n\n  浏览器里访问<u>https://(username).github.io/</u>,可以发现这个url可以被访问了。\n\n到这里，一个免费且无限流量的Github代码托管仓库就创建完成了。\n\n### 三、基于Jekyll模板建立网站\n\n为了在发布前预览自己的网站，我们需要使用Jekyll，同时它也能为我们提供很多模板。\n\n1. 首先点击前往[jekyll 主题官网](http://jekyllthemes.org/)。\n\n2. 然后选择一个自己喜欢的主题模板，比如[Chirpy](http://jekyllthemes.org/themes/jekyll-theme-chirpy/)。\n\n3. 点击Download下载该模板至repo的本地目录，注意确保根目录下含有Gemfile这个文件。\n\n   <img src=\"/images/QQ截图20210308194033.png\"/>\n\n   注意插入图片时需要将图片文件放入assets文件夹，在md文件中由于路径不一致会无法正常显示，在网页中是正常的，无须担心。\n\n4. 在本地repo目录下打开命令窗口并运行\n\n   ```\n   bundle install\n   ```\n\n   自动安装所有依赖的环境\n\n5. 最后一步，开启测试\n\n   ```\n   bundle exec jekyll serve\n   ```\n\n   成功运行之后，我们就可以通过http://127.0.0.1:4000/在本地访问创建的网站了。此时可以随时更改网站内容，并能实现自动实时更新。\n\n### 四、Jekyll目录结构\n\n​\tJekyll使用Ruby脚本根据模板生成静态网页，实现了内容与排版的分离。模板以嵌入[Liquid](https://shopify.github.io/liquid/)脚本的HTML格式存放。内容为markdown或者html。为了撰写自己的博客，需要对模板内容进行修改。\n\nJekyll模板通常包含的目录结构：\n\n```\n    _posts 博客内容\n    _pages 其他需要生成的网页，如About页\n    _layouts 网页排版模板\n    _includes 被模板包含的HTML片段，可在_config.yml中修改位置\n    assets 辅助资源 css布局 js脚本 图片等\n    _data 动态数据\n    _sites 最终生成的静态网页\n    _config.yml 网站的一些配置信息\n    index.html 网站的入口\n```\n\n1. 我们打开根目录下的index.html可以看到：\n\n   ```html\n   ---\n   layout: home\n   # Index page\n   ---\n   ```\n\n2. 上面的home我们到_layouts目录下可以找到：\n\n   ```html\n   ---\n   layout: page\n   # The Home page layout\n   ---\n   \n   {% raw %}\n   {% assign pinned = site.posts | where_exp: \"item\", \"item.pin == true\"  %}\n   {% assign default = site.posts | where_exp: \"item\", \"item.pin != true\"  %}\n   {% assign posts = \"\" | split: \"\" %}\n   ...\n      <div class=\"post-meta text-muted d-flex justify-content-between\">\n   \n         <div>\n           <!-- posted date -->\n           <i class=\"far fa-calendar fa-fw\"></i>\n           {% include timeago.html date=post.date tooltip=true %}\n   \n           <!-- time to read -->\n           <i class=\"far fa-clock fa-fw\"></i>\n           {% include read-time.html content=post.content %}\n   \n           <!-- page views -->\n           {% if site.google_analytics.pv.enabled %}\n           <i class=\"far fa-eye fa-fw\"></i>\n           <span id=\"pv_{{-post.title-}}\" class=\"pageviews\">\n             <i class=\"fas fa-spinner fa-spin fa-fw\"></i>\n           </span>\n           {% endif %}\n         </div>\n   \n         {% if post.pin %}\n         <div class=\"pin\">\n           <i class=\"fas fa-thumbtack fa-fw\"></i>\n           <span>{{ site.data.label.pin_prompt | default: 'Pinned' }}</span>\n         </div>\n         {% endif %}\n   \n       </div> <!-- .post-meta -->\n   \n     </div> <!-- .post-review -->\n   \n   {% endfor %}\n   \n   </div> <!-- #post-list -->\n   \n   {% if paginator.total_pages > 0 %}\n     {% include post-paginator.html %}\n   {% endif %}\n   {% endraw %}\n   ```\n\n   实际上根目录下index.html运行后是home里面的代码内容，1中**html代码段**会填充的上图中的**content**位置。jekyll是将分散在各个目录下的html文件拼接起来运行。\n\n3. 上图的page布局也可以在_layouts目录下找到：\n\n   ```html\n   ---\n   layout: default\n   # The page layout\n   ---\n   {% raw %}\n   <div class=\"row\">\n     <div class=\"col-12 col-lg-11 col-xl-8\">\n       <div id=\"page\" class=\"post pb-5 pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4 mb-md-4\">\n       {% if page.dynamic_title %}\n         <h1 class=\"dynamic-title\">{{ page.title }}</h1>\n         <div class=\"post-content\">\n           {{ content }}\n         </div>\n       {% else %}\n         {{ content }}\n       {% endif %}\n       </div> <!-- #page -->\n     </div><!-- .col-12 -->\n   \n     {% include panel.html %}\n   \n   </div>\n   \n   {% if site.disqus.comments and page.comments %}\n   <div class=\"row\">\n     <div class=\"col-12 col-lg-11 col-xl-8\">\n       <div class=\"pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4\">\n   \n       {% include disqus.html %}\n   \n       </div> <!-- .pl-1 pr-1 -->\n     </div> <!-- .col-12 -->\n   </div> <!-- .row -->\n   {% endif %}\n   {% endraw %}\n   ```\n\n   关于Jekyll的更详细用法可以参考[官方网站](http://jekyllcn.com/docs/home/)\n\n   ps: \n\n   - GitHub Page 的（一种）输入是 markdown 文件，输出是 HTML/CSS/JS 文件。\n- 如果 markdown 文件包含代码块，且代码块中包含花括号 { 或 }，尤其是包含 { % 或 { { 符号组合时，GitHub Page 会报错。\n   - 在代码前后添加{ % raw % }和{ % endraw % }（去掉大括号内的空格）\n- 新版本Google Analytics的Tracking ID在管理→媒体资源→数据流中，也可以直接搜索。","slug":"Getting-Started","published":1,"updated":"2021-06-30T02:55:05.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqjgqag80001dsmp3jh8ad1b","content":"<p><strong>目录</strong></p>\n<p>- <a href=\"#%E4%B8%80%E5%BF%85%E8%A6%81%E7%BB%84%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85\">一、必要组件的安装</a></p>\n<p>- <a href=\"#%E4%BA%8C%E7%BD%91%E7%AB%99%E6%89%98%E7%AE%A1%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84repo\">二、网站托管（在Github上创建自己的repo）</a></p>\n<p>- <a href=\"#%E4%B8%89%E5%9F%BA%E4%BA%8Ejekyll%E6%A8%A1%E6%9D%BF%E5%BB%BA%E7%AB%8B%E7%BD%91%E7%AB%99\">三、基于Jekyll模板建立网站</a></p>\n<p>- <a href=\"#%E5%9B%9Bjekyll%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\">四、Jekyll目录结构</a></p>\n<h3 id=\"一、必要组件的安装\"><a href=\"#一、必要组件的安装\" class=\"headerlink\" title=\"一、必要组件的安装\"></a>一、必要组件的安装</h3><p>需要首先安装以下内容</p>\n<ul>\n<li><p><strong>Ruby</strong> - <a href=\"\">是一种面向对象</a>、命令式、函数式、动态的通用编程语言。Windows下直接下载安装即可<a href=\"https://rubyinstaller.org/\">Ruby installer</a>。注意，如遇报错，可能需要将安装目录（xxx\\Ruby27-x64\\bin）加入系统环境变量PATH。</p>\n</li>\n<li><p><strong>Bundler</strong> - 是一个官方推荐的Ruby gem包管理软件，可以减少Jekyll的编译错误，和环境依赖相关的bug，相关链接<a href=\"https://bundler.io/\">Bundler</a>。只需在终端中运行以下两步：</p>\n<p>1.安装bundler</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">gem <span class=\"hljs-keyword\">install</span> bundler<br></code></pre></td></tr></table></figure>\n\n<p>2.指定源</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">gem</span> sources <span class=\"hljs-string\">&#x27;https://rubygems.org&#x27;</span><br></code></pre></td></tr></table></figure></li>\n<li><p><strong>Jekyll</strong> -相当于一个编译工具，安装好jekyll后，你可以通过jekyll创建一个网站模板从而在本地进行预览，而不用上传至Github后再进行查看，此软件包将在之后的步骤中自动安装。</p>\n</li>\n</ul>\n<h3 id=\"二、网站托管（在Github上创建自己的repo）\"><a href=\"#二、网站托管（在Github上创建自己的repo）\" class=\"headerlink\" title=\"二、网站托管（在Github上创建自己的repo）\"></a>二、网站托管（在Github上创建自己的repo）</h3><p>github.io是完全基于github创建的，其本质上是在你的github账户下创建一个特殊的repo。你可以参照如下步骤完成：</p>\n<ul>\n<li><p>创建repo</p>\n<p>登陆你的账户后，创建一个新的repo。请务必注意该repo的名字，必须保持格式<code>&lt;username&gt;.github.io</code>，其中 `&lt;username） 替换成你的github账户名。</p>\n</li>\n<li><p>把repo clone到本地</p>\n<p>在目录下新建一个index.html的文件,在里面输入任意内容，然后再把代码push送到github上。</p>\n</li>\n<li><p>测试地址</p>\n<p>浏览器里访问<u>https://(username).github.io/</u>,可以发现这个url可以被访问了。</p>\n</li>\n</ul>\n<p>到这里，一个免费且无限流量的Github代码托管仓库就创建完成了。</p>\n<h3 id=\"三、基于Jekyll模板建立网站\"><a href=\"#三、基于Jekyll模板建立网站\" class=\"headerlink\" title=\"三、基于Jekyll模板建立网站\"></a>三、基于Jekyll模板建立网站</h3><p>为了在发布前预览自己的网站，我们需要使用Jekyll，同时它也能为我们提供很多模板。</p>\n<ol>\n<li><p>首先点击前往<a href=\"http://jekyllthemes.org/\">jekyll 主题官网</a>。</p>\n</li>\n<li><p>然后选择一个自己喜欢的主题模板，比如<a href=\"http://jekyllthemes.org/themes/jekyll-theme-chirpy/\">Chirpy</a>。</p>\n</li>\n<li><p>点击Download下载该模板至repo的本地目录，注意确保根目录下含有Gemfile这个文件。</p>\n<img src=\"/images/QQ截图20210308194033.png\"/>\n\n<p>注意插入图片时需要将图片文件放入assets文件夹，在md文件中由于路径不一致会无法正常显示，在网页中是正常的，无须担心。</p>\n</li>\n<li><p>在本地repo目录下打开命令窗口并运行</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">bundle <span class=\"hljs-keyword\">install</span><br></code></pre></td></tr></table></figure>\n\n<p>自动安装所有依赖的环境</p>\n</li>\n<li><p>最后一步，开启测试</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">bundle </span>exec <span class=\"hljs-keyword\">jekyll </span>serve<br></code></pre></td></tr></table></figure>\n\n<p>成功运行之后，我们就可以通过<a href=\"http://127.0.0.1:4000/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E8%AE%BF%E9%97%AE%E5%88%9B%E5%BB%BA%E7%9A%84%E7%BD%91%E7%AB%99%E4%BA%86%E3%80%82%E6%AD%A4%E6%97%B6%E5%8F%AF%E4%BB%A5%E9%9A%8F%E6%97%B6%E6%9B%B4%E6%94%B9%E7%BD%91%E7%AB%99%E5%86%85%E5%AE%B9%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0%E3%80%82\">http://127.0.0.1:4000/在本地访问创建的网站了。此时可以随时更改网站内容，并能实现自动实时更新。</a></p>\n</li>\n</ol>\n<h3 id=\"四、Jekyll目录结构\"><a href=\"#四、Jekyll目录结构\" class=\"headerlink\" title=\"四、Jekyll目录结构\"></a>四、Jekyll目录结构</h3><p>​    Jekyll使用Ruby脚本根据模板生成静态网页，实现了内容与排版的分离。模板以嵌入<a href=\"https://shopify.github.io/liquid/\">Liquid</a>脚本的HTML格式存放。内容为markdown或者html。为了撰写自己的博客，需要对模板内容进行修改。</p>\n<p>Jekyll模板通常包含的目录结构：</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\"><span class=\"hljs-variable\">_posts</span> 博客内容<br><span class=\"hljs-variable\">_pages</span> 其他需要生成的网页，如About页<br><span class=\"hljs-variable\">_layouts</span> 网页排版模板<br><span class=\"hljs-variable\">_includes</span> 被模板包含的HTML片段，可在<span class=\"hljs-variable\">_config</span>.yml中修改位置<br>assets 辅助资源 css布局 js脚本 图片等<br><span class=\"hljs-variable\">_data</span> 动态数据<br><span class=\"hljs-variable\">_sites</span> 最终生成的静态网页<br><span class=\"hljs-variable\">_config</span>.yml 网站的一些配置信息<br>index.html 网站的入口<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><p>我们打开根目录下的index.html可以看到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">---<br>layout: home<br># Index page<br>---<br></code></pre></td></tr></table></figure></li>\n<li><p>上面的home我们到_layouts目录下可以找到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">---<br>layout: page<br># The Home page layout<br>---<br><br>&#123;% raw %&#125;<br>&#123;% assign pinned = site.posts | where_exp: &quot;item&quot;, &quot;item.pin == true&quot;  %&#125;<br>&#123;% assign default = site.posts | where_exp: &quot;item&quot;, &quot;item.pin != true&quot;  %&#125;<br>&#123;% assign posts = &quot;&quot; | split: &quot;&quot; %&#125;<br>...<br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;post-meta text-muted d-flex justify-content-between&quot;</span>&gt;</span><br><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- posted date --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;far fa-calendar fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        &#123;% include timeago.html date=post.date tooltip=true %&#125;<br><br>        <span class=\"hljs-comment\">&lt;!-- time to read --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;far fa-clock fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        &#123;% include read-time.html content=post.content %&#125;<br><br>        <span class=\"hljs-comment\">&lt;!-- page views --&gt;</span><br>        &#123;% if site.google_analytics.pv.enabled %&#125;<br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;far fa-eye fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;pv_&#123;&#123;-post.title-&#125;&#125;&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;pageviews&quot;</span>&gt;</span><br>          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fas fa-spinner fa-spin fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>        &#123;% endif %&#125;<br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>      &#123;% if post.pin %&#125;<br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;pin&quot;</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fas fa-thumbtack fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>&#123;&#123; site.data.label.pin_prompt | default: &#x27;Pinned&#x27; &#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>      &#123;% endif %&#125;<br><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .post-meta --&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .post-review --&gt;</span><br><br>&#123;% endfor %&#125;<br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- #post-list --&gt;</span><br><br>&#123;% if paginator.total_pages &gt; 0 %&#125;<br>  &#123;% include post-paginator.html %&#125;<br>&#123;% endif %&#125;<br>&#123;% endraw %&#125;<br></code></pre></td></tr></table></figure>\n\n<p>实际上根目录下index.html运行后是home里面的代码内容，1中<strong>html代码段</strong>会填充的上图中的<strong>content</strong>位置。jekyll是将分散在各个目录下的html文件拼接起来运行。</p>\n</li>\n<li><p>上图的page布局也可以在_layouts目录下找到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">---<br>layout: default<br># The page layout<br>---<br>&#123;% raw %&#125;<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;row&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;col-12 col-lg-11 col-xl-8&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;page&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;post pb-5 pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4 mb-md-4&quot;</span>&gt;</span><br>    &#123;% if page.dynamic_title %&#125;<br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;dynamic-title&quot;</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;</span><br>        &#123;&#123; content &#125;&#125;<br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    &#123;% else %&#125;<br>      &#123;&#123; content &#125;&#125;<br>    &#123;% endif %&#125;<br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- #page --&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- .col-12 --&gt;</span><br><br>  &#123;% include panel.html %&#125;<br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>&#123;% if site.disqus.comments and page.comments %&#125;<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;row&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;col-12 col-lg-11 col-xl-8&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4&quot;</span>&gt;</span><br><br>    &#123;% include disqus.html %&#125;<br><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .pl-1 pr-1 --&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .col-12 --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .row --&gt;</span><br>&#123;% endif %&#125;<br>&#123;% endraw %&#125;<br></code></pre></td></tr></table></figure>\n\n<p>关于Jekyll的更详细用法可以参考<a href=\"http://jekyllcn.com/docs/home/\">官方网站</a></p>\n<p>ps: </p>\n<ul>\n<li>GitHub Page 的（一种）输入是 markdown 文件，输出是 HTML/CSS/JS 文件。</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>如果 markdown 文件包含代码块，且代码块中包含花括号 { 或 }，尤其是包含 { % 或 { { 符号组合时，GitHub Page 会报错。<ul>\n<li>在代码前后添加{ % raw % }和{ % endraw % }（去掉大括号内的空格）</li>\n</ul>\n</li>\n<li>新版本Google Analytics的Tracking ID在管理→媒体资源→数据流中，也可以直接搜索。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>目录</strong></p>\n<p>- <a href=\"#%E4%B8%80%E5%BF%85%E8%A6%81%E7%BB%84%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85\">一、必要组件的安装</a></p>\n<p>- <a href=\"#%E4%BA%8C%E7%BD%91%E7%AB%99%E6%89%98%E7%AE%A1%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84repo\">二、网站托管（在Github上创建自己的repo）</a></p>\n<p>- <a href=\"#%E4%B8%89%E5%9F%BA%E4%BA%8Ejekyll%E6%A8%A1%E6%9D%BF%E5%BB%BA%E7%AB%8B%E7%BD%91%E7%AB%99\">三、基于Jekyll模板建立网站</a></p>\n<p>- <a href=\"#%E5%9B%9Bjekyll%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\">四、Jekyll目录结构</a></p>\n<h3 id=\"一、必要组件的安装\"><a href=\"#一、必要组件的安装\" class=\"headerlink\" title=\"一、必要组件的安装\"></a>一、必要组件的安装</h3><p>需要首先安装以下内容</p>\n<ul>\n<li><p><strong>Ruby</strong> - <a href=\"\">是一种面向对象</a>、命令式、函数式、动态的通用编程语言。Windows下直接下载安装即可<a href=\"https://rubyinstaller.org/\">Ruby installer</a>。注意，如遇报错，可能需要将安装目录（xxx\\Ruby27-x64\\bin）加入系统环境变量PATH。</p>\n</li>\n<li><p><strong>Bundler</strong> - 是一个官方推荐的Ruby gem包管理软件，可以减少Jekyll的编译错误，和环境依赖相关的bug，相关链接<a href=\"https://bundler.io/\">Bundler</a>。只需在终端中运行以下两步：</p>\n<p>1.安装bundler</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">gem <span class=\"hljs-keyword\">install</span> bundler<br></code></pre></td></tr></table></figure>\n\n<p>2.指定源</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">gem</span> sources <span class=\"hljs-string\">&#x27;https://rubygems.org&#x27;</span><br></code></pre></td></tr></table></figure></li>\n<li><p><strong>Jekyll</strong> -相当于一个编译工具，安装好jekyll后，你可以通过jekyll创建一个网站模板从而在本地进行预览，而不用上传至Github后再进行查看，此软件包将在之后的步骤中自动安装。</p>\n</li>\n</ul>\n<h3 id=\"二、网站托管（在Github上创建自己的repo）\"><a href=\"#二、网站托管（在Github上创建自己的repo）\" class=\"headerlink\" title=\"二、网站托管（在Github上创建自己的repo）\"></a>二、网站托管（在Github上创建自己的repo）</h3><p>github.io是完全基于github创建的，其本质上是在你的github账户下创建一个特殊的repo。你可以参照如下步骤完成：</p>\n<ul>\n<li><p>创建repo</p>\n<p>登陆你的账户后，创建一个新的repo。请务必注意该repo的名字，必须保持格式<code>&lt;username&gt;.github.io</code>，其中 `&lt;username） 替换成你的github账户名。</p>\n</li>\n<li><p>把repo clone到本地</p>\n<p>在目录下新建一个index.html的文件,在里面输入任意内容，然后再把代码push送到github上。</p>\n</li>\n<li><p>测试地址</p>\n<p>浏览器里访问<u>https://(username).github.io/</u>,可以发现这个url可以被访问了。</p>\n</li>\n</ul>\n<p>到这里，一个免费且无限流量的Github代码托管仓库就创建完成了。</p>\n<h3 id=\"三、基于Jekyll模板建立网站\"><a href=\"#三、基于Jekyll模板建立网站\" class=\"headerlink\" title=\"三、基于Jekyll模板建立网站\"></a>三、基于Jekyll模板建立网站</h3><p>为了在发布前预览自己的网站，我们需要使用Jekyll，同时它也能为我们提供很多模板。</p>\n<ol>\n<li><p>首先点击前往<a href=\"http://jekyllthemes.org/\">jekyll 主题官网</a>。</p>\n</li>\n<li><p>然后选择一个自己喜欢的主题模板，比如<a href=\"http://jekyllthemes.org/themes/jekyll-theme-chirpy/\">Chirpy</a>。</p>\n</li>\n<li><p>点击Download下载该模板至repo的本地目录，注意确保根目录下含有Gemfile这个文件。</p>\n<img src=\"/images/QQ截图20210308194033.png\"/>\n\n<p>注意插入图片时需要将图片文件放入assets文件夹，在md文件中由于路径不一致会无法正常显示，在网页中是正常的，无须担心。</p>\n</li>\n<li><p>在本地repo目录下打开命令窗口并运行</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">bundle <span class=\"hljs-keyword\">install</span><br></code></pre></td></tr></table></figure>\n\n<p>自动安装所有依赖的环境</p>\n</li>\n<li><p>最后一步，开启测试</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">bundle </span>exec <span class=\"hljs-keyword\">jekyll </span>serve<br></code></pre></td></tr></table></figure>\n\n<p>成功运行之后，我们就可以通过<a href=\"http://127.0.0.1:4000/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E8%AE%BF%E9%97%AE%E5%88%9B%E5%BB%BA%E7%9A%84%E7%BD%91%E7%AB%99%E4%BA%86%E3%80%82%E6%AD%A4%E6%97%B6%E5%8F%AF%E4%BB%A5%E9%9A%8F%E6%97%B6%E6%9B%B4%E6%94%B9%E7%BD%91%E7%AB%99%E5%86%85%E5%AE%B9%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0%E3%80%82\">http://127.0.0.1:4000/在本地访问创建的网站了。此时可以随时更改网站内容，并能实现自动实时更新。</a></p>\n</li>\n</ol>\n<h3 id=\"四、Jekyll目录结构\"><a href=\"#四、Jekyll目录结构\" class=\"headerlink\" title=\"四、Jekyll目录结构\"></a>四、Jekyll目录结构</h3><p>​    Jekyll使用Ruby脚本根据模板生成静态网页，实现了内容与排版的分离。模板以嵌入<a href=\"https://shopify.github.io/liquid/\">Liquid</a>脚本的HTML格式存放。内容为markdown或者html。为了撰写自己的博客，需要对模板内容进行修改。</p>\n<p>Jekyll模板通常包含的目录结构：</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\"><span class=\"hljs-variable\">_posts</span> 博客内容<br><span class=\"hljs-variable\">_pages</span> 其他需要生成的网页，如About页<br><span class=\"hljs-variable\">_layouts</span> 网页排版模板<br><span class=\"hljs-variable\">_includes</span> 被模板包含的HTML片段，可在<span class=\"hljs-variable\">_config</span>.yml中修改位置<br>assets 辅助资源 css布局 js脚本 图片等<br><span class=\"hljs-variable\">_data</span> 动态数据<br><span class=\"hljs-variable\">_sites</span> 最终生成的静态网页<br><span class=\"hljs-variable\">_config</span>.yml 网站的一些配置信息<br>index.html 网站的入口<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><p>我们打开根目录下的index.html可以看到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">---<br>layout: home<br># Index page<br>---<br></code></pre></td></tr></table></figure></li>\n<li><p>上面的home我们到_layouts目录下可以找到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">---<br>layout: page<br># The Home page layout<br>---<br><br>&#123;% raw %&#125;<br>&#123;% assign pinned = site.posts | where_exp: &quot;item&quot;, &quot;item.pin == true&quot;  %&#125;<br>&#123;% assign default = site.posts | where_exp: &quot;item&quot;, &quot;item.pin != true&quot;  %&#125;<br>&#123;% assign posts = &quot;&quot; | split: &quot;&quot; %&#125;<br>...<br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;post-meta text-muted d-flex justify-content-between&quot;</span>&gt;</span><br><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- posted date --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;far fa-calendar fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        &#123;% include timeago.html date=post.date tooltip=true %&#125;<br><br>        <span class=\"hljs-comment\">&lt;!-- time to read --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;far fa-clock fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        &#123;% include read-time.html content=post.content %&#125;<br><br>        <span class=\"hljs-comment\">&lt;!-- page views --&gt;</span><br>        &#123;% if site.google_analytics.pv.enabled %&#125;<br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;far fa-eye fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;pv_&#123;&#123;-post.title-&#125;&#125;&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;pageviews&quot;</span>&gt;</span><br>          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fas fa-spinner fa-spin fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>        &#123;% endif %&#125;<br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>      &#123;% if post.pin %&#125;<br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;pin&quot;</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fas fa-thumbtack fa-fw&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>&#123;&#123; site.data.label.pin_prompt | default: &#x27;Pinned&#x27; &#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>      &#123;% endif %&#125;<br><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .post-meta --&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .post-review --&gt;</span><br><br>&#123;% endfor %&#125;<br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- #post-list --&gt;</span><br><br>&#123;% if paginator.total_pages &gt; 0 %&#125;<br>  &#123;% include post-paginator.html %&#125;<br>&#123;% endif %&#125;<br>&#123;% endraw %&#125;<br></code></pre></td></tr></table></figure>\n\n<p>实际上根目录下index.html运行后是home里面的代码内容，1中<strong>html代码段</strong>会填充的上图中的<strong>content</strong>位置。jekyll是将分散在各个目录下的html文件拼接起来运行。</p>\n</li>\n<li><p>上图的page布局也可以在_layouts目录下找到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">---<br>layout: default<br># The page layout<br>---<br>&#123;% raw %&#125;<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;row&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;col-12 col-lg-11 col-xl-8&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;page&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;post pb-5 pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4 mb-md-4&quot;</span>&gt;</span><br>    &#123;% if page.dynamic_title %&#125;<br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;dynamic-title&quot;</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;post-content&quot;</span>&gt;</span><br>        &#123;&#123; content &#125;&#125;<br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    &#123;% else %&#125;<br>      &#123;&#123; content &#125;&#125;<br>    &#123;% endif %&#125;<br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- #page --&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- .col-12 --&gt;</span><br><br>  &#123;% include panel.html %&#125;<br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>&#123;% if site.disqus.comments and page.comments %&#125;<br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;row&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;col-12 col-lg-11 col-xl-8&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;pl-1 pr-1 pl-sm-2 pr-sm-2 pl-md-4 pr-md-4&quot;</span>&gt;</span><br><br>    &#123;% include disqus.html %&#125;<br><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .pl-1 pr-1 --&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .col-12 --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- .row --&gt;</span><br>&#123;% endif %&#125;<br>&#123;% endraw %&#125;<br></code></pre></td></tr></table></figure>\n\n<p>关于Jekyll的更详细用法可以参考<a href=\"http://jekyllcn.com/docs/home/\">官方网站</a></p>\n<p>ps: </p>\n<ul>\n<li>GitHub Page 的（一种）输入是 markdown 文件，输出是 HTML/CSS/JS 文件。</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>如果 markdown 文件包含代码块，且代码块中包含花括号 { 或 }，尤其是包含 { % 或 { { 符号组合时，GitHub Page 会报错。<ul>\n<li>在代码前后添加{ % raw % }和{ % endraw % }（去掉大括号内的空格）</li>\n</ul>\n</li>\n<li>新版本Google Analytics的Tracking ID在管理→媒体资源→数据流中，也可以直接搜索。</li>\n</ul>\n"},{"title":"Matlab作图：设置曲面颜色及范围函数 caxis","author":"Shi Daming","date":"2021-04-06T09:00:00.000Z","pin":true,"_content":"\n**目录**\n\n \\- [语法](#语法)\n\n \\- [说明](#说明)\n\n \\- [示例](#示例)\n\n  \\- [提高下限](#提高下限)\n\n  \\- [保持多个曲面图的颜色范围不变](#保持多个曲面图的颜色范围不变)\n\n  \\- [指定曲面图的颜色图颜色](#指定曲面图的颜色图颜色)\n\n  \\- [为曲面图指定真彩色](#为曲面图指定真彩色)\n\n  \\- [修改曲面图的外观](#修改曲面图的外观)\n\n### 语法\n\n```\ncaxis(limits)\ncaxis('auto')\ncaxis('manual')\ncaxis(target,___)\ncl = caxis\n```\n\n### 说明\n\n`caxis(limits)` 设置当前坐标区的颜色图范围。`limits` 是 `[cmin cmax]` 形式的二元素向量。[颜色图索引数组](https://ww2.mathworks.cn/help/matlab/ref/caxis.html#mw_262386a0-0173-40a5-b123-7b5834c1d396)中小于或等于 `cmin` 的所有值映射到颜色图的第一行。大于或等于 `cmax` 的所有值映射到颜色图的最后一行。介于 `cmin` 和 `cmax` 之间的所有值以线性方式映射到颜色图的中间各行。\n\n\n\n**注意**\n\n`caxis` 函数只影响 `CDataMapping` 属性设置为 `'scaled'` 的图形对象，不影响使用真彩色或 `CDataMapping` 设置为 `'direct'` 的图形对象。\n\n`caxis('auto')` 在颜色图索引数组中的值更改时启用自动范围更新。这是默认行为。`caxis auto` 命令是此语法的另一种形式。\n\n`caxis('manual')` 禁用自动范围更新。`caxis manual` 命令是此语法的另一种形式。\n\n`caxis(target,___)` 为特定坐标区或图设置颜色图范围。指定 `target` 作为上述任何语法中的第一个输入参数。\n\n`cl = caxis` 返回当前坐标区或图的当前颜色图范围。\n\n### 示例\n\n#### 提高下限 \n\n绘制带有颜色栏的抛物面。\n\n```\n[X,Y] = meshgrid(-5:.5:5);\nZ = X.^2 + Y.^2;\nsurf(Z);\ncolorbar\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_01_zh_CN.png)\n\n获取当前颜色范围。\n\n```\nlim = caxis\nlim = 1×2\n\n     0    50\n```\n\n将下限提高到 `20`。请注意，小于或等于 `20` 的所有 `Z` 值映射到第一种颜色。\n\n```\ncaxis([20 50])\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_02_zh_CN.png)\n\n#### 保持多个曲面图的颜色范围不变 \n\n创建两个垂直偏移的抛物面。\n\n```\n[X,Y] = meshgrid(-5:.5:5);\nZ1 = X.^2 + Y.^2;\nZ2 = Z1 + 50;\n```\n\n绘制第一个抛物面。添加颜色栏，然后保持第二个抛物面的坐标区不变。\n\n```\nsurf(X,Y,Z1);\ncolorbar\nhold on\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_01_zh_CN.png)\n\n使用 `'manual'` 选项保持当前颜色范围不变。然后绘制第二个抛物面。\n\n```\ncaxis('manual');\nsurf(X,Y,Z2);\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_02_zh_CN.png)\n\n#### 指定曲面图的颜色图颜色 \n\n通过包含第四个矩阵输入 `C` 来指定曲面图的颜色。曲面图使用 `Z` 表示高度，`C` 表示颜色。使用*颜色图*指定颜色，该颜色图使用单个数字表示色谱上的颜色。使用颜色图时，`C` 与 `Z` 大小相同。向图中添加颜色栏以显示 `C` 中的数据值如何对应于颜色图中的颜色。\n\n```\n[X,Y] = meshgrid(1:0.5:10,1:20);\nZ = sin(X) + cos(Y);\nC = X.*Y;\nsurf(X,Y,Z,C)\ncolorbar\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/specifycolorsforsurfaceplotexample_01_zh_CN.png)\n\n#### 为曲面图指定真彩色\n\n通过包含第四个矩阵输入 `CO` 来指定曲面图的颜色。曲面图使用 `Z` 表示高度，`CO` 表示颜色。使用*真彩色*指定颜色，真彩色使用三个数字（即三元组）表示所有可能的颜色。使用真彩色时，如果 `Z` 为 `m`×`n`，则 `CO` 为 `m`×`n`×3。数组的第一页指示每种颜色的红色分量；第二页指示绿色分量；第三页指示蓝色分量。\n\n```\n[X,Y,Z] = peaks(25);\nCO(:,:,1) = zeros(25); % red\nCO(:,:,2) = ones(25).*linspace(0.5,0.6,25); % green\nCO(:,:,3) = ones(25).*linspace(0,1,25); % blue\nsurf(X,Y,Z,CO)\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/surfaceplotwithtruecolorsexample_01_zh_CN.png)\n\n#### 修改曲面图的外观 \n\n通过指定以 `0.5` 为值的 `FaceAlpha` 名称-值对组，来创建半透明曲面。要允许进一步修改，请将曲面对象赋给变量 `s`。\n\n```\n[X,Y] = meshgrid(-5:.5:5);\nZ = Y.*sin(X) - X.*cos(Y);\ns = surf(X,Y,Z,'FaceAlpha',0.5)\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_01_zh_CN.png)\n\n```\ns = \n  Surface with properties:\n\n       EdgeColor: [0 0 0]\n       LineStyle: '-'\n       FaceColor: 'flat'\n    FaceLighting: 'flat'\n       FaceAlpha: 0.5000\n           XData: [21x21 double]\n           YData: [21x21 double]\n           ZData: [21x21 double]\n           CData: [21x21 double]\n\n  Show all properties\n```\n\n在创建曲面对象之后可使用 `s` 访问并修改其属性。例如，通过设置 `EdgeColor` 属性来隐藏边。\n\n```\ns.EdgeColor = 'none';\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_02_zh_CN.png)","source":"_posts/2021-04-06-Matlab设置颜色图范围.md","raw":"---\ntitle: Matlab作图：设置曲面颜色及范围函数 caxis\nauthor: Shi Daming\ndate: 2021-04-06 17:00:00 +0800\ncategories: jekyll update\ntags: [Matlab, surf, color]\npin: true\n---\n\n**目录**\n\n \\- [语法](#语法)\n\n \\- [说明](#说明)\n\n \\- [示例](#示例)\n\n  \\- [提高下限](#提高下限)\n\n  \\- [保持多个曲面图的颜色范围不变](#保持多个曲面图的颜色范围不变)\n\n  \\- [指定曲面图的颜色图颜色](#指定曲面图的颜色图颜色)\n\n  \\- [为曲面图指定真彩色](#为曲面图指定真彩色)\n\n  \\- [修改曲面图的外观](#修改曲面图的外观)\n\n### 语法\n\n```\ncaxis(limits)\ncaxis('auto')\ncaxis('manual')\ncaxis(target,___)\ncl = caxis\n```\n\n### 说明\n\n`caxis(limits)` 设置当前坐标区的颜色图范围。`limits` 是 `[cmin cmax]` 形式的二元素向量。[颜色图索引数组](https://ww2.mathworks.cn/help/matlab/ref/caxis.html#mw_262386a0-0173-40a5-b123-7b5834c1d396)中小于或等于 `cmin` 的所有值映射到颜色图的第一行。大于或等于 `cmax` 的所有值映射到颜色图的最后一行。介于 `cmin` 和 `cmax` 之间的所有值以线性方式映射到颜色图的中间各行。\n\n\n\n**注意**\n\n`caxis` 函数只影响 `CDataMapping` 属性设置为 `'scaled'` 的图形对象，不影响使用真彩色或 `CDataMapping` 设置为 `'direct'` 的图形对象。\n\n`caxis('auto')` 在颜色图索引数组中的值更改时启用自动范围更新。这是默认行为。`caxis auto` 命令是此语法的另一种形式。\n\n`caxis('manual')` 禁用自动范围更新。`caxis manual` 命令是此语法的另一种形式。\n\n`caxis(target,___)` 为特定坐标区或图设置颜色图范围。指定 `target` 作为上述任何语法中的第一个输入参数。\n\n`cl = caxis` 返回当前坐标区或图的当前颜色图范围。\n\n### 示例\n\n#### 提高下限 \n\n绘制带有颜色栏的抛物面。\n\n```\n[X,Y] = meshgrid(-5:.5:5);\nZ = X.^2 + Y.^2;\nsurf(Z);\ncolorbar\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_01_zh_CN.png)\n\n获取当前颜色范围。\n\n```\nlim = caxis\nlim = 1×2\n\n     0    50\n```\n\n将下限提高到 `20`。请注意，小于或等于 `20` 的所有 `Z` 值映射到第一种颜色。\n\n```\ncaxis([20 50])\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_02_zh_CN.png)\n\n#### 保持多个曲面图的颜色范围不变 \n\n创建两个垂直偏移的抛物面。\n\n```\n[X,Y] = meshgrid(-5:.5:5);\nZ1 = X.^2 + Y.^2;\nZ2 = Z1 + 50;\n```\n\n绘制第一个抛物面。添加颜色栏，然后保持第二个抛物面的坐标区不变。\n\n```\nsurf(X,Y,Z1);\ncolorbar\nhold on\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_01_zh_CN.png)\n\n使用 `'manual'` 选项保持当前颜色范围不变。然后绘制第二个抛物面。\n\n```\ncaxis('manual');\nsurf(X,Y,Z2);\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_02_zh_CN.png)\n\n#### 指定曲面图的颜色图颜色 \n\n通过包含第四个矩阵输入 `C` 来指定曲面图的颜色。曲面图使用 `Z` 表示高度，`C` 表示颜色。使用*颜色图*指定颜色，该颜色图使用单个数字表示色谱上的颜色。使用颜色图时，`C` 与 `Z` 大小相同。向图中添加颜色栏以显示 `C` 中的数据值如何对应于颜色图中的颜色。\n\n```\n[X,Y] = meshgrid(1:0.5:10,1:20);\nZ = sin(X) + cos(Y);\nC = X.*Y;\nsurf(X,Y,Z,C)\ncolorbar\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/specifycolorsforsurfaceplotexample_01_zh_CN.png)\n\n#### 为曲面图指定真彩色\n\n通过包含第四个矩阵输入 `CO` 来指定曲面图的颜色。曲面图使用 `Z` 表示高度，`CO` 表示颜色。使用*真彩色*指定颜色，真彩色使用三个数字（即三元组）表示所有可能的颜色。使用真彩色时，如果 `Z` 为 `m`×`n`，则 `CO` 为 `m`×`n`×3。数组的第一页指示每种颜色的红色分量；第二页指示绿色分量；第三页指示蓝色分量。\n\n```\n[X,Y,Z] = peaks(25);\nCO(:,:,1) = zeros(25); % red\nCO(:,:,2) = ones(25).*linspace(0.5,0.6,25); % green\nCO(:,:,3) = ones(25).*linspace(0,1,25); % blue\nsurf(X,Y,Z,CO)\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/surfaceplotwithtruecolorsexample_01_zh_CN.png)\n\n#### 修改曲面图的外观 \n\n通过指定以 `0.5` 为值的 `FaceAlpha` 名称-值对组，来创建半透明曲面。要允许进一步修改，请将曲面对象赋给变量 `s`。\n\n```\n[X,Y] = meshgrid(-5:.5:5);\nZ = Y.*sin(X) - X.*cos(Y);\ns = surf(X,Y,Z,'FaceAlpha',0.5)\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_01_zh_CN.png)\n\n```\ns = \n  Surface with properties:\n\n       EdgeColor: [0 0 0]\n       LineStyle: '-'\n       FaceColor: 'flat'\n    FaceLighting: 'flat'\n       FaceAlpha: 0.5000\n           XData: [21x21 double]\n           YData: [21x21 double]\n           ZData: [21x21 double]\n           CData: [21x21 double]\n\n  Show all properties\n```\n\n在创建曲面对象之后可使用 `s` 访问并修改其属性。例如，通过设置 `EdgeColor` 属性来隐藏边。\n\n```\ns.EdgeColor = 'none';\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_02_zh_CN.png)","slug":"Matlab设置颜色图范围","published":1,"updated":"2021-06-09T02:26:09.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqjgqagb0002dsmpcxbg6tyd","content":"<p><strong>目录</strong></p>\n<p> - <a href=\"#%E8%AF%AD%E6%B3%95\">语法</a></p>\n<p> - <a href=\"#%E8%AF%B4%E6%98%8E\">说明</a></p>\n<p> - <a href=\"#%E7%A4%BA%E4%BE%8B\">示例</a></p>\n<p>  - <a href=\"#%E6%8F%90%E9%AB%98%E4%B8%8B%E9%99%90\">提高下限</a></p>\n<p>  - <a href=\"#%E4%BF%9D%E6%8C%81%E5%A4%9A%E4%B8%AA%E6%9B%B2%E9%9D%A2%E5%9B%BE%E7%9A%84%E9%A2%9C%E8%89%B2%E8%8C%83%E5%9B%B4%E4%B8%8D%E5%8F%98\">保持多个曲面图的颜色范围不变</a></p>\n<p>  - <a href=\"#%E6%8C%87%E5%AE%9A%E6%9B%B2%E9%9D%A2%E5%9B%BE%E7%9A%84%E9%A2%9C%E8%89%B2%E5%9B%BE%E9%A2%9C%E8%89%B2\">指定曲面图的颜色图颜色</a></p>\n<p>  - <a href=\"#%E4%B8%BA%E6%9B%B2%E9%9D%A2%E5%9B%BE%E6%8C%87%E5%AE%9A%E7%9C%9F%E5%BD%A9%E8%89%B2\">为曲面图指定真彩色</a></p>\n<p>  - <a href=\"#%E4%BF%AE%E6%94%B9%E6%9B%B2%E9%9D%A2%E5%9B%BE%E7%9A%84%E5%A4%96%E8%A7%82\">修改曲面图的外观</a></p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(limits)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&#x27;auto&#x27;</span>)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&#x27;manual&#x27;</span>)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(target,___)</span></span><br>cl = caxis<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><p><code>caxis(limits)</code> 设置当前坐标区的颜色图范围。<code>limits</code> 是 <code>[cmin cmax]</code> 形式的二元素向量。<a href=\"https://ww2.mathworks.cn/help/matlab/ref/caxis.html#mw_262386a0-0173-40a5-b123-7b5834c1d396\">颜色图索引数组</a>中小于或等于 <code>cmin</code> 的所有值映射到颜色图的第一行。大于或等于 <code>cmax</code> 的所有值映射到颜色图的最后一行。介于 <code>cmin</code> 和 <code>cmax</code> 之间的所有值以线性方式映射到颜色图的中间各行。</p>\n<p><strong>注意</strong></p>\n<p><code>caxis</code> 函数只影响 <code>CDataMapping</code> 属性设置为 <code>&#39;scaled&#39;</code> 的图形对象，不影响使用真彩色或 <code>CDataMapping</code> 设置为 <code>&#39;direct&#39;</code> 的图形对象。</p>\n<p><code>caxis(&#39;auto&#39;)</code> 在颜色图索引数组中的值更改时启用自动范围更新。这是默认行为。<code>caxis auto</code> 命令是此语法的另一种形式。</p>\n<p><code>caxis(&#39;manual&#39;)</code> 禁用自动范围更新。<code>caxis manual</code> 命令是此语法的另一种形式。</p>\n<p><code>caxis(target,___)</code> 为特定坐标区或图设置颜色图范围。指定 <code>target</code> 作为上述任何语法中的第一个输入参数。</p>\n<p><code>cl = caxis</code> 返回当前坐标区或图的当前颜色图范围。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"提高下限\"><a href=\"#提高下限\" class=\"headerlink\" title=\"提高下限\"></a>提高下限</h4><p>绘制带有颜色栏的抛物面。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">-5</span>:<span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">5</span>);<br><span class=\"hljs-keyword\">Z</span> = <span class=\"hljs-keyword\">X</span>.^<span class=\"hljs-number\">2</span> + <span class=\"hljs-keyword\">Y</span>.^<span class=\"hljs-number\">2</span>;<br>surf(<span class=\"hljs-keyword\">Z</span>);<br>colorbar<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_01_zh_CN.png\" alt=\"img\"></p>\n<p>获取当前颜色范围。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">lim</span> = caxis<br><span class=\"hljs-attribute\">lim</span> = <span class=\"hljs-number\">1</span>×<span class=\"hljs-number\">2</span><br><br>     <span class=\"hljs-attribute\">0</span>    <span class=\"hljs-number\">50</span><br></code></pre></td></tr></table></figure>\n\n<p>将下限提高到 <code>20</code>。请注意，小于或等于 <code>20</code> 的所有 <code>Z</code> 值映射到第一种颜色。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">([<span class=\"hljs-number\">20</span> <span class=\"hljs-number\">50</span>])</span></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_02_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"保持多个曲面图的颜色范围不变\"><a href=\"#保持多个曲面图的颜色范围不变\" class=\"headerlink\" title=\"保持多个曲面图的颜色范围不变\"></a>保持多个曲面图的颜色范围不变</h4><p>创建两个垂直偏移的抛物面。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">-5</span>:<span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">5</span>);<br><span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">1</span> = <span class=\"hljs-keyword\">X</span>.^<span class=\"hljs-number\">2</span> + <span class=\"hljs-keyword\">Y</span>.^<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">2</span> = <span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">1</span> + <span class=\"hljs-number\">50</span>;<br></code></pre></td></tr></table></figure>\n\n<p>绘制第一个抛物面。添加颜色栏，然后保持第二个抛物面的坐标区不变。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">1</span>);<br>colorbar<br>hold on<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_01_zh_CN.png\" alt=\"img\"></p>\n<p>使用 <code>&#39;manual&#39;</code> 选项保持当前颜色范围不变。然后绘制第二个抛物面。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">caxis(<span class=\"hljs-string\">&#x27;manual&#x27;</span>);<br>surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">2</span>);<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_02_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"指定曲面图的颜色图颜色\"><a href=\"#指定曲面图的颜色图颜色\" class=\"headerlink\" title=\"指定曲面图的颜色图颜色\"></a>指定曲面图的颜色图颜色</h4><p>通过包含第四个矩阵输入 <code>C</code> 来指定曲面图的颜色。曲面图使用 <code>Z</code> 表示高度，<code>C</code> 表示颜色。使用<em>颜色图</em>指定颜色，该颜色图使用单个数字表示色谱上的颜色。使用颜色图时，<code>C</code> 与 <code>Z</code> 大小相同。向图中添加颜色栏以显示 <code>C</code> 中的数据值如何对应于颜色图中的颜色。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">0</span><span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">20</span>);<br><span class=\"hljs-keyword\">Z</span> = sin(<span class=\"hljs-keyword\">X</span>) + cos(<span class=\"hljs-keyword\">Y</span>);<br>C = <span class=\"hljs-keyword\">X</span>.*<span class=\"hljs-keyword\">Y</span>;<br>surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>,C)<br>colorbar<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/specifycolorsforsurfaceplotexample_01_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"为曲面图指定真彩色\"><a href=\"#为曲面图指定真彩色\" class=\"headerlink\" title=\"为曲面图指定真彩色\"></a>为曲面图指定真彩色</h4><p>通过包含第四个矩阵输入 <code>CO</code> 来指定曲面图的颜色。曲面图使用 <code>Z</code> 表示高度，<code>CO</code> 表示颜色。使用<em>真彩色</em>指定颜色，真彩色使用三个数字（即三元组）表示所有可能的颜色。使用真彩色时，如果 <code>Z</code> 为 <code>m</code>×<code>n</code>，则 <code>CO</code> 为 <code>m</code>×<code>n</code>×3。数组的第一页指示每种颜色的红色分量；第二页指示绿色分量；第三页指示蓝色分量。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs matlab\">[X,Y,Z] = peaks(<span class=\"hljs-number\">25</span>);<br>CO(:,:,<span class=\"hljs-number\">1</span>) = <span class=\"hljs-built_in\">zeros</span>(<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">% red</span><br>CO(:,:,<span class=\"hljs-number\">2</span>) = <span class=\"hljs-built_in\">ones</span>(<span class=\"hljs-number\">25</span>).*<span class=\"hljs-built_in\">linspace</span>(<span class=\"hljs-number\">0.5</span>,<span class=\"hljs-number\">0.6</span>,<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">% green</span><br>CO(:,:,<span class=\"hljs-number\">3</span>) = <span class=\"hljs-built_in\">ones</span>(<span class=\"hljs-number\">25</span>).*<span class=\"hljs-built_in\">linspace</span>(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">% blue</span><br>surf(X,Y,Z,CO)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/surfaceplotwithtruecolorsexample_01_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"修改曲面图的外观\"><a href=\"#修改曲面图的外观\" class=\"headerlink\" title=\"修改曲面图的外观\"></a>修改曲面图的外观</h4><p>通过指定以 <code>0.5</code> 为值的 <code>FaceAlpha</code> 名称-值对组，来创建半透明曲面。要允许进一步修改，请将曲面对象赋给变量 <code>s</code>。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">-5</span>:<span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">5</span>);<br><span class=\"hljs-keyword\">Z</span> = <span class=\"hljs-keyword\">Y</span>.*sin(<span class=\"hljs-keyword\">X</span>) - <span class=\"hljs-keyword\">X</span>.*cos(<span class=\"hljs-keyword\">Y</span>);<br>s = surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>,<span class=\"hljs-string\">&#x27;FaceAlpha&#x27;</span>,<span class=\"hljs-number\">0</span><span class=\"hljs-number\">.5</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_01_zh_CN.png\" alt=\"img\"></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">s = <br>  Surface with propertie<span class=\"hljs-variable\">s:</span><br><br>       EdgeColor: [<span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>]<br>       LineStyle: <span class=\"hljs-string\">&#x27;-&#x27;</span><br>       FaceColor: <span class=\"hljs-string\">&#x27;flat&#x27;</span><br>    FaceLightin<span class=\"hljs-variable\">g:</span> <span class=\"hljs-string\">&#x27;flat&#x27;</span><br>       FaceAlph<span class=\"hljs-variable\">a:</span> <span class=\"hljs-number\">0.5000</span><br>           XDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br>           YDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br>           ZDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br>           CDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br><br>  Show <span class=\"hljs-keyword\">all</span> properties<br></code></pre></td></tr></table></figure>\n\n<p>在创建曲面对象之后可使用 <code>s</code> 访问并修改其属性。例如，通过设置 <code>EdgeColor</code> 属性来隐藏边。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">s.EdgeColor</span> = <span class=\"hljs-string\">&#x27;none&#x27;</span><span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_02_zh_CN.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>目录</strong></p>\n<p> - <a href=\"#%E8%AF%AD%E6%B3%95\">语法</a></p>\n<p> - <a href=\"#%E8%AF%B4%E6%98%8E\">说明</a></p>\n<p> - <a href=\"#%E7%A4%BA%E4%BE%8B\">示例</a></p>\n<p>  - <a href=\"#%E6%8F%90%E9%AB%98%E4%B8%8B%E9%99%90\">提高下限</a></p>\n<p>  - <a href=\"#%E4%BF%9D%E6%8C%81%E5%A4%9A%E4%B8%AA%E6%9B%B2%E9%9D%A2%E5%9B%BE%E7%9A%84%E9%A2%9C%E8%89%B2%E8%8C%83%E5%9B%B4%E4%B8%8D%E5%8F%98\">保持多个曲面图的颜色范围不变</a></p>\n<p>  - <a href=\"#%E6%8C%87%E5%AE%9A%E6%9B%B2%E9%9D%A2%E5%9B%BE%E7%9A%84%E9%A2%9C%E8%89%B2%E5%9B%BE%E9%A2%9C%E8%89%B2\">指定曲面图的颜色图颜色</a></p>\n<p>  - <a href=\"#%E4%B8%BA%E6%9B%B2%E9%9D%A2%E5%9B%BE%E6%8C%87%E5%AE%9A%E7%9C%9F%E5%BD%A9%E8%89%B2\">为曲面图指定真彩色</a></p>\n<p>  - <a href=\"#%E4%BF%AE%E6%94%B9%E6%9B%B2%E9%9D%A2%E5%9B%BE%E7%9A%84%E5%A4%96%E8%A7%82\">修改曲面图的外观</a></p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(limits)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&#x27;auto&#x27;</span>)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&#x27;manual&#x27;</span>)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">(target,___)</span></span><br>cl = caxis<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><p><code>caxis(limits)</code> 设置当前坐标区的颜色图范围。<code>limits</code> 是 <code>[cmin cmax]</code> 形式的二元素向量。<a href=\"https://ww2.mathworks.cn/help/matlab/ref/caxis.html#mw_262386a0-0173-40a5-b123-7b5834c1d396\">颜色图索引数组</a>中小于或等于 <code>cmin</code> 的所有值映射到颜色图的第一行。大于或等于 <code>cmax</code> 的所有值映射到颜色图的最后一行。介于 <code>cmin</code> 和 <code>cmax</code> 之间的所有值以线性方式映射到颜色图的中间各行。</p>\n<p><strong>注意</strong></p>\n<p><code>caxis</code> 函数只影响 <code>CDataMapping</code> 属性设置为 <code>&#39;scaled&#39;</code> 的图形对象，不影响使用真彩色或 <code>CDataMapping</code> 设置为 <code>&#39;direct&#39;</code> 的图形对象。</p>\n<p><code>caxis(&#39;auto&#39;)</code> 在颜色图索引数组中的值更改时启用自动范围更新。这是默认行为。<code>caxis auto</code> 命令是此语法的另一种形式。</p>\n<p><code>caxis(&#39;manual&#39;)</code> 禁用自动范围更新。<code>caxis manual</code> 命令是此语法的另一种形式。</p>\n<p><code>caxis(target,___)</code> 为特定坐标区或图设置颜色图范围。指定 <code>target</code> 作为上述任何语法中的第一个输入参数。</p>\n<p><code>cl = caxis</code> 返回当前坐标区或图的当前颜色图范围。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"提高下限\"><a href=\"#提高下限\" class=\"headerlink\" title=\"提高下限\"></a>提高下限</h4><p>绘制带有颜色栏的抛物面。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">-5</span>:<span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">5</span>);<br><span class=\"hljs-keyword\">Z</span> = <span class=\"hljs-keyword\">X</span>.^<span class=\"hljs-number\">2</span> + <span class=\"hljs-keyword\">Y</span>.^<span class=\"hljs-number\">2</span>;<br>surf(<span class=\"hljs-keyword\">Z</span>);<br>colorbar<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_01_zh_CN.png\" alt=\"img\"></p>\n<p>获取当前颜色范围。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">lim</span> = caxis<br><span class=\"hljs-attribute\">lim</span> = <span class=\"hljs-number\">1</span>×<span class=\"hljs-number\">2</span><br><br>     <span class=\"hljs-attribute\">0</span>    <span class=\"hljs-number\">50</span><br></code></pre></td></tr></table></figure>\n\n<p>将下限提高到 <code>20</code>。请注意，小于或等于 <code>20</code> 的所有 <code>Z</code> 值映射到第一种颜色。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-function\"><span class=\"hljs-title\">caxis</span><span class=\"hljs-params\">([<span class=\"hljs-number\">20</span> <span class=\"hljs-number\">50</span>])</span></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxisraiselowerlimitexample_02_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"保持多个曲面图的颜色范围不变\"><a href=\"#保持多个曲面图的颜色范围不变\" class=\"headerlink\" title=\"保持多个曲面图的颜色范围不变\"></a>保持多个曲面图的颜色范围不变</h4><p>创建两个垂直偏移的抛物面。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">-5</span>:<span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">5</span>);<br><span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">1</span> = <span class=\"hljs-keyword\">X</span>.^<span class=\"hljs-number\">2</span> + <span class=\"hljs-keyword\">Y</span>.^<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">2</span> = <span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">1</span> + <span class=\"hljs-number\">50</span>;<br></code></pre></td></tr></table></figure>\n\n<p>绘制第一个抛物面。添加颜色栏，然后保持第二个抛物面的坐标区不变。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">1</span>);<br>colorbar<br>hold on<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_01_zh_CN.png\" alt=\"img\"></p>\n<p>使用 <code>&#39;manual&#39;</code> 选项保持当前颜色范围不变。然后绘制第二个抛物面。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">caxis(<span class=\"hljs-string\">&#x27;manual&#x27;</span>);<br>surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span><span class=\"hljs-number\">2</span>);<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/caxissharecolorlimitsexample_02_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"指定曲面图的颜色图颜色\"><a href=\"#指定曲面图的颜色图颜色\" class=\"headerlink\" title=\"指定曲面图的颜色图颜色\"></a>指定曲面图的颜色图颜色</h4><p>通过包含第四个矩阵输入 <code>C</code> 来指定曲面图的颜色。曲面图使用 <code>Z</code> 表示高度，<code>C</code> 表示颜色。使用<em>颜色图</em>指定颜色，该颜色图使用单个数字表示色谱上的颜色。使用颜色图时，<code>C</code> 与 <code>Z</code> 大小相同。向图中添加颜色栏以显示 <code>C</code> 中的数据值如何对应于颜色图中的颜色。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">0</span><span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">20</span>);<br><span class=\"hljs-keyword\">Z</span> = sin(<span class=\"hljs-keyword\">X</span>) + cos(<span class=\"hljs-keyword\">Y</span>);<br>C = <span class=\"hljs-keyword\">X</span>.*<span class=\"hljs-keyword\">Y</span>;<br>surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>,C)<br>colorbar<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/specifycolorsforsurfaceplotexample_01_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"为曲面图指定真彩色\"><a href=\"#为曲面图指定真彩色\" class=\"headerlink\" title=\"为曲面图指定真彩色\"></a>为曲面图指定真彩色</h4><p>通过包含第四个矩阵输入 <code>CO</code> 来指定曲面图的颜色。曲面图使用 <code>Z</code> 表示高度，<code>CO</code> 表示颜色。使用<em>真彩色</em>指定颜色，真彩色使用三个数字（即三元组）表示所有可能的颜色。使用真彩色时，如果 <code>Z</code> 为 <code>m</code>×<code>n</code>，则 <code>CO</code> 为 <code>m</code>×<code>n</code>×3。数组的第一页指示每种颜色的红色分量；第二页指示绿色分量；第三页指示蓝色分量。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs matlab\">[X,Y,Z] = peaks(<span class=\"hljs-number\">25</span>);<br>CO(:,:,<span class=\"hljs-number\">1</span>) = <span class=\"hljs-built_in\">zeros</span>(<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">% red</span><br>CO(:,:,<span class=\"hljs-number\">2</span>) = <span class=\"hljs-built_in\">ones</span>(<span class=\"hljs-number\">25</span>).*<span class=\"hljs-built_in\">linspace</span>(<span class=\"hljs-number\">0.5</span>,<span class=\"hljs-number\">0.6</span>,<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">% green</span><br>CO(:,:,<span class=\"hljs-number\">3</span>) = <span class=\"hljs-built_in\">ones</span>(<span class=\"hljs-number\">25</span>).*<span class=\"hljs-built_in\">linspace</span>(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">% blue</span><br>surf(X,Y,Z,CO)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/surfaceplotwithtruecolorsexample_01_zh_CN.png\" alt=\"img\"></p>\n<h4 id=\"修改曲面图的外观\"><a href=\"#修改曲面图的外观\" class=\"headerlink\" title=\"修改曲面图的外观\"></a>修改曲面图的外观</h4><p>通过指定以 <code>0.5</code> 为值的 <code>FaceAlpha</code> 名称-值对组，来创建半透明曲面。要允许进一步修改，请将曲面对象赋给变量 <code>s</code>。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>] = meshgrid(<span class=\"hljs-number\">-5</span>:<span class=\"hljs-number\">.5</span>:<span class=\"hljs-number\">5</span>);<br><span class=\"hljs-keyword\">Z</span> = <span class=\"hljs-keyword\">Y</span>.*sin(<span class=\"hljs-keyword\">X</span>) - <span class=\"hljs-keyword\">X</span>.*cos(<span class=\"hljs-keyword\">Y</span>);<br>s = surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>,<span class=\"hljs-string\">&#x27;FaceAlpha&#x27;</span>,<span class=\"hljs-number\">0</span><span class=\"hljs-number\">.5</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_01_zh_CN.png\" alt=\"img\"></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">s = <br>  Surface with propertie<span class=\"hljs-variable\">s:</span><br><br>       EdgeColor: [<span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>]<br>       LineStyle: <span class=\"hljs-string\">&#x27;-&#x27;</span><br>       FaceColor: <span class=\"hljs-string\">&#x27;flat&#x27;</span><br>    FaceLightin<span class=\"hljs-variable\">g:</span> <span class=\"hljs-string\">&#x27;flat&#x27;</span><br>       FaceAlph<span class=\"hljs-variable\">a:</span> <span class=\"hljs-number\">0.5000</span><br>           XDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br>           YDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br>           ZDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br>           CDat<span class=\"hljs-variable\">a:</span> [<span class=\"hljs-number\">21</span>x21 double]<br><br>  Show <span class=\"hljs-keyword\">all</span> properties<br></code></pre></td></tr></table></figure>\n\n<p>在创建曲面对象之后可使用 <code>s</code> 访问并修改其属性。例如，通过设置 <code>EdgeColor</code> 属性来隐藏边。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">s.EdgeColor</span> = <span class=\"hljs-string\">&#x27;none&#x27;</span><span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/ref/modifysurfaceplotappearanceexample_02_zh_CN.png\" alt=\"img\"></p>\n"},{"title":"python中的lambda和map函数","author":"Shi Daming","date":"2021-05-14T15:00:00.000Z","pin":true,"_content":"\n**目录**\n\n\\- [1、lambda函数](#1lambda函数)\n\n\\- [2、map函数](#2map函数)\n\n\\- [3、map函数和lambda函数结合](#3map函数和lambda函数结合)\n\n\n### 1、lambda函数\n\n他就是个没有名字的函数，比如匿名信这种。我们能在某一函数参数条件中直接调用他、或者借用其返回的实体构成新的函数名 如下。\n\n比如说  lambda x,y: x+y  就是说我的函数输入x,y，返回x+y\n\n```python\ny=lambda a,b,c:a+b+c\nprint('\\n',y(1,2,3))\n```\n\n\n结果为6\n\n仔细看看，是不是y成为了新的函数名？！\n\n \n\n### 2、map函数\n\nmap就是映射的意思，他肯定是将两种东西结合映射为某一个结果。他就是接收一个函数function和一个list列表，并通过把函数f依次作用在list的每一个元素，从而得到一个新的list返回（py3中返回一个map对象，用list函数转换一下即可）\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\n\nX=input().strip().split()\nN=list(map(int, X))[0]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n\n注意哈这个X必须是列表，int则表示函数了，当然也可以其他函数命名\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\n\ndef ex(c):\n    return int(c)\n        \nX=input().strip().split()\nN=list(map(ex, X))[0]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n\n注意他是自动迭代地对X列表的每一个元素操作，也就是说map自带迭代器！\n\n \n\n### 3、map函数和lambda函数结合\n\n显然只用改变map函数中的函数体就可以，无非就是函数体没有了实名，将lambda放于map的参数条件之中\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\ndef ex(c):\n    return int(c)\n        \n##X=input().strip().split()\n##N=list(map(ex, X))[0]\n##\n##for i in range(1, N):\n##\tprint(fib_recur(i),end=' ')\n\nX=input().strip().split()\nN=list(map(lambda a:int(a), X))[0]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n在本代码list(map(lambda a:int(a), X)) 这一句只用注意两个点：\n\n1） lambda参数只能是一个参数标量，因为map是自动对列表X的元素迭代的\n\n2）X为一维情况，所以他的每一个元素是标量\n\n针对X为二维情况，博主暂时没想到好的解决办法，只能是X[2]来选择其中的一个向量列表。\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\n\nX=[[1,2,3],[2,4,6],[3,6,9]]\nN=list(map(lambda a:int(a), X[2]))[2]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n————————————————\n版权声明：本文为CSDN博主「lamusique」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/lamusique/article/details/89162363","source":"_posts/2021-05-14-python中的lambda和map函数.md","raw":"---\ntitle: python中的lambda和map函数\nauthor: Shi Daming\ndate: 2021-05-14 23:00:00 +0800\ncategories: jekyll update\ntags: [python, lambda, map]\npin: true\n---\n\n**目录**\n\n\\- [1、lambda函数](#1lambda函数)\n\n\\- [2、map函数](#2map函数)\n\n\\- [3、map函数和lambda函数结合](#3map函数和lambda函数结合)\n\n\n### 1、lambda函数\n\n他就是个没有名字的函数，比如匿名信这种。我们能在某一函数参数条件中直接调用他、或者借用其返回的实体构成新的函数名 如下。\n\n比如说  lambda x,y: x+y  就是说我的函数输入x,y，返回x+y\n\n```python\ny=lambda a,b,c:a+b+c\nprint('\\n',y(1,2,3))\n```\n\n\n结果为6\n\n仔细看看，是不是y成为了新的函数名？！\n\n \n\n### 2、map函数\n\nmap就是映射的意思，他肯定是将两种东西结合映射为某一个结果。他就是接收一个函数function和一个list列表，并通过把函数f依次作用在list的每一个元素，从而得到一个新的list返回（py3中返回一个map对象，用list函数转换一下即可）\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\n\nX=input().strip().split()\nN=list(map(int, X))[0]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n\n注意哈这个X必须是列表，int则表示函数了，当然也可以其他函数命名\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\n\ndef ex(c):\n    return int(c)\n        \nX=input().strip().split()\nN=list(map(ex, X))[0]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n\n注意他是自动迭代地对X列表的每一个元素操作，也就是说map自带迭代器！\n\n \n\n### 3、map函数和lambda函数结合\n\n显然只用改变map函数中的函数体就可以，无非就是函数体没有了实名，将lambda放于map的参数条件之中\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\ndef ex(c):\n    return int(c)\n        \n##X=input().strip().split()\n##N=list(map(ex, X))[0]\n##\n##for i in range(1, N):\n##\tprint(fib_recur(i),end=' ')\n\nX=input().strip().split()\nN=list(map(lambda a:int(a), X))[0]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n在本代码list(map(lambda a:int(a), X)) 这一句只用注意两个点：\n\n1） lambda参数只能是一个参数标量，因为map是自动对列表X的元素迭代的\n\n2）X为一维情况，所以他的每一个元素是标量\n\n针对X为二维情况，博主暂时没想到好的解决办法，只能是X[2]来选择其中的一个向量列表。\n\n```python\ndef fib_recur(n):\n    if n<=1:\n        return n\n    else:\n        return fib_recur(n-1)+fib_recur(n-2)\n\n\nX=[[1,2,3],[2,4,6],[3,6,9]]\nN=list(map(lambda a:int(a), X[2]))[2]\n\nfor i in range(1, N):\n    print(fib_recur(i),end=' ')\n```\n\n————————————————\n版权声明：本文为CSDN博主「lamusique」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/lamusique/article/details/89162363","slug":"python中的lambda和map函数","published":1,"updated":"2021-06-09T01:20:53.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqjgqage0005dsmp5vo06hp5","content":"<p><strong>目录</strong></p>\n<p>- <a href=\"#1lambda%E5%87%BD%E6%95%B0\">1、lambda函数</a></p>\n<p>- <a href=\"#2map%E5%87%BD%E6%95%B0\">2、map函数</a></p>\n<p>- <a href=\"#3map%E5%87%BD%E6%95%B0%E5%92%8Clambda%E5%87%BD%E6%95%B0%E7%BB%93%E5%90%88\">3、map函数和lambda函数结合</a></p>\n<h3 id=\"1、lambda函数\"><a href=\"#1、lambda函数\" class=\"headerlink\" title=\"1、lambda函数\"></a>1、lambda函数</h3><p>他就是个没有名字的函数，比如匿名信这种。我们能在某一函数参数条件中直接调用他、或者借用其返回的实体构成新的函数名 如下。</p>\n<p>比如说  lambda x,y: x+y  就是说我的函数输入x,y，返回x+y</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">y=<span class=\"hljs-keyword\">lambda</span> a,b,c:a+b+c<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>,y(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>))<br></code></pre></td></tr></table></figure>\n\n\n<p>结果为6</p>\n<p>仔细看看，是不是y成为了新的函数名？！</p>\n<h3 id=\"2、map函数\"><a href=\"#2、map函数\" class=\"headerlink\" title=\"2、map函数\"></a>2、map函数</h3><p>map就是映射的意思，他肯定是将两种东西结合映射为某一个结果。他就是接收一个函数function和一个list列表，并通过把函数f依次作用在list的每一个元素，从而得到一个新的list返回（py3中返回一个map对象，用list函数转换一下即可）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><br>X=<span class=\"hljs-built_in\">input</span>().strip().split()<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-built_in\">int</span>, X))[<span class=\"hljs-number\">0</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n\n<p>注意哈这个X必须是列表，int则表示函数了，当然也可以其他函数命名</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">ex</span>(<span class=\"hljs-params\">c</span>):</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">int</span>(c)<br>        <br>X=<span class=\"hljs-built_in\">input</span>().strip().split()<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(ex, X))[<span class=\"hljs-number\">0</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n\n<p>注意他是自动迭代地对X列表的每一个元素操作，也就是说map自带迭代器！</p>\n<h3 id=\"3、map函数和lambda函数结合\"><a href=\"#3、map函数和lambda函数结合\" class=\"headerlink\" title=\"3、map函数和lambda函数结合\"></a>3、map函数和lambda函数结合</h3><p>显然只用改变map函数中的函数体就可以，无非就是函数体没有了实名，将lambda放于map的参数条件之中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">ex</span>(<span class=\"hljs-params\">c</span>):</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">int</span>(c)<br>        <br><span class=\"hljs-comment\">##X=input().strip().split()</span><br><span class=\"hljs-comment\">##N=list(map(ex, X))[0]</span><br><span class=\"hljs-comment\">##</span><br><span class=\"hljs-comment\">##for i in range(1, N):</span><br><span class=\"hljs-comment\">##\tprint(fib_recur(i),end=&#x27; &#x27;)</span><br><br>X=<span class=\"hljs-built_in\">input</span>().strip().split()<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-keyword\">lambda</span> a:<span class=\"hljs-built_in\">int</span>(a), X))[<span class=\"hljs-number\">0</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>在本代码list(map(lambda a:int(a), X)) 这一句只用注意两个点：</p>\n<p>1） lambda参数只能是一个参数标量，因为map是自动对列表X的元素迭代的</p>\n<p>2）X为一维情况，所以他的每一个元素是标量</p>\n<p>针对X为二维情况，博主暂时没想到好的解决办法，只能是X[2]来选择其中的一个向量列表。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><br>X=[[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">9</span>]]<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-keyword\">lambda</span> a:<span class=\"hljs-built_in\">int</span>(a), X[<span class=\"hljs-number\">2</span>]))[<span class=\"hljs-number\">2</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>————————————————<br>版权声明：本文为CSDN博主「lamusique」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/lamusique/article/details/89162363\">https://blog.csdn.net/lamusique/article/details/89162363</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>目录</strong></p>\n<p>- <a href=\"#1lambda%E5%87%BD%E6%95%B0\">1、lambda函数</a></p>\n<p>- <a href=\"#2map%E5%87%BD%E6%95%B0\">2、map函数</a></p>\n<p>- <a href=\"#3map%E5%87%BD%E6%95%B0%E5%92%8Clambda%E5%87%BD%E6%95%B0%E7%BB%93%E5%90%88\">3、map函数和lambda函数结合</a></p>\n<h3 id=\"1、lambda函数\"><a href=\"#1、lambda函数\" class=\"headerlink\" title=\"1、lambda函数\"></a>1、lambda函数</h3><p>他就是个没有名字的函数，比如匿名信这种。我们能在某一函数参数条件中直接调用他、或者借用其返回的实体构成新的函数名 如下。</p>\n<p>比如说  lambda x,y: x+y  就是说我的函数输入x,y，返回x+y</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">y=<span class=\"hljs-keyword\">lambda</span> a,b,c:a+b+c<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>,y(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>))<br></code></pre></td></tr></table></figure>\n\n\n<p>结果为6</p>\n<p>仔细看看，是不是y成为了新的函数名？！</p>\n<h3 id=\"2、map函数\"><a href=\"#2、map函数\" class=\"headerlink\" title=\"2、map函数\"></a>2、map函数</h3><p>map就是映射的意思，他肯定是将两种东西结合映射为某一个结果。他就是接收一个函数function和一个list列表，并通过把函数f依次作用在list的每一个元素，从而得到一个新的list返回（py3中返回一个map对象，用list函数转换一下即可）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><br>X=<span class=\"hljs-built_in\">input</span>().strip().split()<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-built_in\">int</span>, X))[<span class=\"hljs-number\">0</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n\n<p>注意哈这个X必须是列表，int则表示函数了，当然也可以其他函数命名</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">ex</span>(<span class=\"hljs-params\">c</span>):</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">int</span>(c)<br>        <br>X=<span class=\"hljs-built_in\">input</span>().strip().split()<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(ex, X))[<span class=\"hljs-number\">0</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n\n<p>注意他是自动迭代地对X列表的每一个元素操作，也就是说map自带迭代器！</p>\n<h3 id=\"3、map函数和lambda函数结合\"><a href=\"#3、map函数和lambda函数结合\" class=\"headerlink\" title=\"3、map函数和lambda函数结合\"></a>3、map函数和lambda函数结合</h3><p>显然只用改变map函数中的函数体就可以，无非就是函数体没有了实名，将lambda放于map的参数条件之中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">ex</span>(<span class=\"hljs-params\">c</span>):</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">int</span>(c)<br>        <br><span class=\"hljs-comment\">##X=input().strip().split()</span><br><span class=\"hljs-comment\">##N=list(map(ex, X))[0]</span><br><span class=\"hljs-comment\">##</span><br><span class=\"hljs-comment\">##for i in range(1, N):</span><br><span class=\"hljs-comment\">##\tprint(fib_recur(i),end=&#x27; &#x27;)</span><br><br>X=<span class=\"hljs-built_in\">input</span>().strip().split()<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-keyword\">lambda</span> a:<span class=\"hljs-built_in\">int</span>(a), X))[<span class=\"hljs-number\">0</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>在本代码list(map(lambda a:int(a), X)) 这一句只用注意两个点：</p>\n<p>1） lambda参数只能是一个参数标量，因为map是自动对列表X的元素迭代的</p>\n<p>2）X为一维情况，所以他的每一个元素是标量</p>\n<p>针对X为二维情况，博主暂时没想到好的解决办法，只能是X[2]来选择其中的一个向量列表。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib_recur</span>(<span class=\"hljs-params\">n</span>):</span><br>    <span class=\"hljs-keyword\">if</span> n&lt;=<span class=\"hljs-number\">1</span>:<br>        <span class=\"hljs-keyword\">return</span> n<br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-keyword\">return</span> fib_recur(n-<span class=\"hljs-number\">1</span>)+fib_recur(n-<span class=\"hljs-number\">2</span>)<br><br><br>X=[[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">9</span>]]<br>N=<span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">map</span>(<span class=\"hljs-keyword\">lambda</span> a:<span class=\"hljs-built_in\">int</span>(a), X[<span class=\"hljs-number\">2</span>]))[<span class=\"hljs-number\">2</span>]<br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, N):<br>    <span class=\"hljs-built_in\">print</span>(fib_recur(i),end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>————————————————<br>版权声明：本文为CSDN博主「lamusique」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/lamusique/article/details/89162363\">https://blog.csdn.net/lamusique/article/details/89162363</a></p>\n"},{"title":"Keras中LN层的使用","author":"Shi Daming","date":"2021-06-09T15:00:00.000Z","pin":true,"typora-root-url":"..","_content":"\n- [1、BN的问题](#1bn的问题)\n- [2、LN层的使用](#2ln层的使用)\n### 1、BN的问题\n\nBN是按照样本数计算归一化统计量的，当样本数很少时，比如说只有4个。这四个样本的均值和方差便不能反映全局的统计分布息，所以基于少量样本的BN的效果会变得很差。\n\n### 2、LN层的使用\n\n<img src=\"/images/BN_and_LN.png\" style=\"zoom:80%;\" />\n\n这张图与我们平常看到的feature maps有些不同，立方体的3个维度为别为batch/ channel/ HW，而我们常见的feature maps中，3个维度分别为channel/ H/ W，没有batch。分析上图可知：BN计算均值和标准差时，固定channel(在一个channel内)，对HW和batch作平均；LN计算均值和标准差时，固定batch(在一个batch内)，对HW和channel作平均，更详细的推导过程可以查阅参考文献。\n\n可以看到与BN不同，LN没有对batch作平均，所以当batch变化时，网络的错误率不会有明显变化。论文的实验显示：LN和IN 在时间序列模型(RNN/LSTM)和生成模型(GAN)上有很好的效果，而GN在视觉模型(CNN)上表现更好。\n\nLN与BN层非常相似，特点主要体现在两个方面：\n\n1. LN得到的模型更稳定；\n2. LN有正则化的作用，得到的模型更不容易过拟合。\n\n关于Layer normalization， Keras官方API连接如下\n\nhttps://keras.io/api/layers/normalization_layers/layer_normalization/\n\n但是请注意，这个函数在Keras中可能无法正常使用，但可以通过pip正确安装\n\n**Install**\n\n```python\npip install keras-layer-normalization\n```\n\n**Usage**\n\n```python\nimport keras\nfrom keras_layer_normalization import LayerNormalization\n\n\ninput_layer = keras.layers.Input(shape=(2, 3))\nnorm_layer = LayerNormalization()(input_layer)\nmodel = keras.models.Model(inputs=input_layer, outputs=norm_layer)\nmodel.compile(optimizer='adam', loss='mse', metrics={},)\nmodel.summary()\n```\n\n**Reference**\n\n- [Lei Ba et al., 2016](https://arxiv.org/pdf/1607.06450.pdf).\n\n","source":"_posts/2021-06-09-keras中LN层的使用.md","raw":"---\ntitle: Keras中LN层的使用\nauthor: Shi Daming\ndate: 2021-06-09 23:00:00 +0800\ncategories: jekyll update\ntags: [python, Keras, LN]\npin: true\ntypora-root-url: ..\n---\n\n- [1、BN的问题](#1bn的问题)\n- [2、LN层的使用](#2ln层的使用)\n### 1、BN的问题\n\nBN是按照样本数计算归一化统计量的，当样本数很少时，比如说只有4个。这四个样本的均值和方差便不能反映全局的统计分布息，所以基于少量样本的BN的效果会变得很差。\n\n### 2、LN层的使用\n\n<img src=\"/images/BN_and_LN.png\" style=\"zoom:80%;\" />\n\n这张图与我们平常看到的feature maps有些不同，立方体的3个维度为别为batch/ channel/ HW，而我们常见的feature maps中，3个维度分别为channel/ H/ W，没有batch。分析上图可知：BN计算均值和标准差时，固定channel(在一个channel内)，对HW和batch作平均；LN计算均值和标准差时，固定batch(在一个batch内)，对HW和channel作平均，更详细的推导过程可以查阅参考文献。\n\n可以看到与BN不同，LN没有对batch作平均，所以当batch变化时，网络的错误率不会有明显变化。论文的实验显示：LN和IN 在时间序列模型(RNN/LSTM)和生成模型(GAN)上有很好的效果，而GN在视觉模型(CNN)上表现更好。\n\nLN与BN层非常相似，特点主要体现在两个方面：\n\n1. LN得到的模型更稳定；\n2. LN有正则化的作用，得到的模型更不容易过拟合。\n\n关于Layer normalization， Keras官方API连接如下\n\nhttps://keras.io/api/layers/normalization_layers/layer_normalization/\n\n但是请注意，这个函数在Keras中可能无法正常使用，但可以通过pip正确安装\n\n**Install**\n\n```python\npip install keras-layer-normalization\n```\n\n**Usage**\n\n```python\nimport keras\nfrom keras_layer_normalization import LayerNormalization\n\n\ninput_layer = keras.layers.Input(shape=(2, 3))\nnorm_layer = LayerNormalization()(input_layer)\nmodel = keras.models.Model(inputs=input_layer, outputs=norm_layer)\nmodel.compile(optimizer='adam', loss='mse', metrics={},)\nmodel.summary()\n```\n\n**Reference**\n\n- [Lei Ba et al., 2016](https://arxiv.org/pdf/1607.06450.pdf).\n\n","slug":"keras中LN层的使用","published":1,"updated":"2021-06-09T02:54:34.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqjgqagf0006dsmp5z8tggp7","content":"<ul>\n<li><a href=\"#1bn%E7%9A%84%E9%97%AE%E9%A2%98\">1、BN的问题</a></li>\n<li><a href=\"#2ln%E5%B1%82%E7%9A%84%E4%BD%BF%E7%94%A8\">2、LN层的使用</a><h3 id=\"1、BN的问题\"><a href=\"#1、BN的问题\" class=\"headerlink\" title=\"1、BN的问题\"></a>1、BN的问题</h3></li>\n</ul>\n<p>BN是按照样本数计算归一化统计量的，当样本数很少时，比如说只有4个。这四个样本的均值和方差便不能反映全局的统计分布息，所以基于少量样本的BN的效果会变得很差。</p>\n<h3 id=\"2、LN层的使用\"><a href=\"#2、LN层的使用\" class=\"headerlink\" title=\"2、LN层的使用\"></a>2、LN层的使用</h3><img src=\"/images/BN_and_LN.png\" style=\"zoom:80%;\" />\n\n<p>这张图与我们平常看到的feature maps有些不同，立方体的3个维度为别为batch/ channel/ HW，而我们常见的feature maps中，3个维度分别为channel/ H/ W，没有batch。分析上图可知：BN计算均值和标准差时，固定channel(在一个channel内)，对HW和batch作平均；LN计算均值和标准差时，固定batch(在一个batch内)，对HW和channel作平均，更详细的推导过程可以查阅参考文献。</p>\n<p>可以看到与BN不同，LN没有对batch作平均，所以当batch变化时，网络的错误率不会有明显变化。论文的实验显示：LN和IN 在时间序列模型(RNN/LSTM)和生成模型(GAN)上有很好的效果，而GN在视觉模型(CNN)上表现更好。</p>\n<p>LN与BN层非常相似，特点主要体现在两个方面：</p>\n<ol>\n<li>LN得到的模型更稳定；</li>\n<li>LN有正则化的作用，得到的模型更不容易过拟合。</li>\n</ol>\n<p>关于Layer normalization， Keras官方API连接如下</p>\n<p><a href=\"https://keras.io/api/layers/normalization_layers/layer_normalization/\">https://keras.io/api/layers/normalization_layers/layer_normalization/</a></p>\n<p>但是请注意，这个函数在Keras中可能无法正常使用，但可以通过pip正确安装</p>\n<p><strong>Install</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">pip install keras-layer-normalization<br></code></pre></td></tr></table></figure>\n\n<p><strong>Usage</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> keras<br><span class=\"hljs-keyword\">from</span> keras_layer_normalization <span class=\"hljs-keyword\">import</span> LayerNormalization<br><br><br>input_layer = keras.layers.Input(shape=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>))<br>norm_layer = LayerNormalization()(input_layer)<br>model = keras.models.Model(inputs=input_layer, outputs=norm_layer)<br>model.<span class=\"hljs-built_in\">compile</span>(optimizer=<span class=\"hljs-string\">&#x27;adam&#x27;</span>, loss=<span class=\"hljs-string\">&#x27;mse&#x27;</span>, metrics=&#123;&#125;,)<br>model.summary()<br></code></pre></td></tr></table></figure>\n\n<p><strong>Reference</strong></p>\n<ul>\n<li><a href=\"https://arxiv.org/pdf/1607.06450.pdf\">Lei Ba et al., 2016</a>.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"#1bn%E7%9A%84%E9%97%AE%E9%A2%98\">1、BN的问题</a></li>\n<li><a href=\"#2ln%E5%B1%82%E7%9A%84%E4%BD%BF%E7%94%A8\">2、LN层的使用</a><h3 id=\"1、BN的问题\"><a href=\"#1、BN的问题\" class=\"headerlink\" title=\"1、BN的问题\"></a>1、BN的问题</h3></li>\n</ul>\n<p>BN是按照样本数计算归一化统计量的，当样本数很少时，比如说只有4个。这四个样本的均值和方差便不能反映全局的统计分布息，所以基于少量样本的BN的效果会变得很差。</p>\n<h3 id=\"2、LN层的使用\"><a href=\"#2、LN层的使用\" class=\"headerlink\" title=\"2、LN层的使用\"></a>2、LN层的使用</h3><img src=\"/images/BN_and_LN.png\" style=\"zoom:80%;\" />\n\n<p>这张图与我们平常看到的feature maps有些不同，立方体的3个维度为别为batch/ channel/ HW，而我们常见的feature maps中，3个维度分别为channel/ H/ W，没有batch。分析上图可知：BN计算均值和标准差时，固定channel(在一个channel内)，对HW和batch作平均；LN计算均值和标准差时，固定batch(在一个batch内)，对HW和channel作平均，更详细的推导过程可以查阅参考文献。</p>\n<p>可以看到与BN不同，LN没有对batch作平均，所以当batch变化时，网络的错误率不会有明显变化。论文的实验显示：LN和IN 在时间序列模型(RNN/LSTM)和生成模型(GAN)上有很好的效果，而GN在视觉模型(CNN)上表现更好。</p>\n<p>LN与BN层非常相似，特点主要体现在两个方面：</p>\n<ol>\n<li>LN得到的模型更稳定；</li>\n<li>LN有正则化的作用，得到的模型更不容易过拟合。</li>\n</ol>\n<p>关于Layer normalization， Keras官方API连接如下</p>\n<p><a href=\"https://keras.io/api/layers/normalization_layers/layer_normalization/\">https://keras.io/api/layers/normalization_layers/layer_normalization/</a></p>\n<p>但是请注意，这个函数在Keras中可能无法正常使用，但可以通过pip正确安装</p>\n<p><strong>Install</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">pip install keras-layer-normalization<br></code></pre></td></tr></table></figure>\n\n<p><strong>Usage</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> keras<br><span class=\"hljs-keyword\">from</span> keras_layer_normalization <span class=\"hljs-keyword\">import</span> LayerNormalization<br><br><br>input_layer = keras.layers.Input(shape=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>))<br>norm_layer = LayerNormalization()(input_layer)<br>model = keras.models.Model(inputs=input_layer, outputs=norm_layer)<br>model.<span class=\"hljs-built_in\">compile</span>(optimizer=<span class=\"hljs-string\">&#x27;adam&#x27;</span>, loss=<span class=\"hljs-string\">&#x27;mse&#x27;</span>, metrics=&#123;&#125;,)<br>model.summary()<br></code></pre></td></tr></table></figure>\n\n<p><strong>Reference</strong></p>\n<ul>\n<li><a href=\"https://arxiv.org/pdf/1607.06450.pdf\">Lei Ba et al., 2016</a>.</li>\n</ul>\n"},{"title":"信号处理|傅里叶变换、短时傅里叶变换、小波变换、希尔伯特变换、希尔伯特黄变换","author":"Shi Daming","date":"2021-06-20T02:00:00.000Z","pin":true,"typora-root-url":"..","_content":"\n\n\n对于非平稳信号，其频率特性会随时间变化，为了捕获这一时变特性，我们需要对信号进行时频域分析，包括短时傅里叶变换、小波变换、希尔伯特变换和希尔伯特黄变换，一下注意进行分析。\n\n### 傅里叶变换(Fourier Transform, FT)\n\n简单介绍一下一个连续信号$f(t)$的傅里叶变换和其逆变换\n$$\n\\begin{array}{l}\nF(\\omega)=F[f(t)]=\\int_{-\\infty}^{+\\infty} f(t) e^{-j \\omega t} d t \\\\\nf(t)=F^{-1}[F(\\omega)]=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} F(\\omega) e^{j \\omega t} d \\omega\n\\end{array}\n$$\n\n当然在实际应用中，一般使用离散傅里叶变换\n$$\nX(k)=\\sum_{n=0}^{N-1} x(n) e^{-j2\\pi kn/N}\\\\\nx(n)=\\frac{1}{N}\\sum_{n=0}^{N-1} X(n) e^{j2\\pi kn/N}\n$$\n如果信号的频率特性在任何时间都不发生改变(即该信号是平稳信号)的话，使用傅里叶变换是没有问题的，然而如果该信号是非平稳信号，这时候时域信息就相当重要了。\n\n### 短时傅里叶变换(Short-Time Fourier Transform, STFT)\n\n$$\nX(n, \\omega)=\\sum_{m=-\\infty}^{\\infty} x(m) w(n-m) e^{-j \\omega m}\n$$\n\n其中$w(n-m)$是窗函数，我们可以据此对信号进行时频分析。\n\n### 小波变换(Wavelet Transform, WT)\n\n对于任意能量有限信号$f(t)$，其连续小波变换(CWT)定义为\n$$\nW_{f}(a, b)=\\frac{1}{\\sqrt{a}} \\int_{-\\infty}^{+\\infty} f(t) \\psi^{*}\\left(\\frac{t-b}{a}\\right) d t\n$$\n在低频区域的变换结果具有较高的频率分辨率(频率轴是对数轴，在低频区域跨度较小)，在高频区域具有较高的时间分辨率。\n\n### conclusion\n\n- 对于时域信号，它可以有很高的时间分辨率，然而其频率分辨率为零。\n- 经过傅里叶变换得到的频域信号可以实现很高的频率分辨率，然而其时间分辨率为零。\n- 对于短时傅里叶变换(STFT)，它在时域和频域都有一定的分辨率，并且在全局范围内STFT的时频分辨率都是一样的。但是由于Heisenberg不确定原理(也就是量子力学中的测不准原理)的制约，每一个时频窗的面积都是固定的，即时间分辨率和频率分辨率成反比，所以这两个分辨率不能同时很高。\n- 小波变换在不同时间和频率上具有不同尺寸的时频窗，可以在低频区域实现较高的频率分辨率，然而其仍然受到Heisenberg不确定原理的限制，时间分辨率和频率分辨率不能两全其美。同时小波变换的时频窗并非完全是自适应的，它还需要人为地选择基函数。\n\n上述的方法都会受到Heisenberg不确定原理的限制，而且并不是完全自适应的方法。接下来介绍一种不受Heisenberg不确定原理限制、同时还有更好的自适应性的时频分析方法——希尔伯特黄变换\n\n### 希尔伯特变换(Hilbert Transform, HT)\n\n希尔伯特变换也是傅里叶变换的一种扩展，它常常用于通信系统中的调制解调，当然它也可以用于信号的时频分析。\n\n单频率成分信号，即同一时刻只有一个频率分量的信号，我们可以由Hilbert谱很好地观察出信号的时频特征，且有很高的的时间分辨率，但是信号边界处的误差往往较大。\n\n对多频率成分信号不能直接进行Hilbert变换，我们还需要对其进行进一步处理，将原始信号分解成单频率信号的叠加，这就要用到希尔伯特黄变换中的EMD分解。\n\n### 希尔伯特黄变换(Hilbert-Huang Transform, HHT)\n\n相比于HT，HHT就多了一个经验模态分解(Empirical Mode Decomposition, EMD)，EMD就是把复杂信号分解成从高频到低频的若干个固有模态函数(Intrinsic Mode Function, IMF)，IMF需要满足两个条件：\n\n1. 信号极值点的数量与零点数相等或相差为1\n2. 信号的由极大值定义的上包络和由极小值定义 的下包络的局部均值为0(即包络上下对称)\n\n简单的理解就是，EMD是依次提取信号在每个局部的最高频分量的过程，所以每个IMF实际上是一个单频率分量信号，这样我们就可以对每个IMF分量进行Hilbert变换，从而得到每个分量的Hilbert谱。\n\n当然HHT并不是完美的，目前对于它的关键步骤EMD分解的研究尚不完善，缺乏一些理论基础。HHT在低频区域可能会出现一些不存在的频率分量。\n\nhttps://zhuanlan.zhihu.com/p/150705777\n","source":"_posts/2021-06-20-信号处理傅里叶变换、短时傅里叶变换、小波变换、希尔伯特变换、希尔伯特黄变换.md","raw":"---\ntitle: 信号处理|傅里叶变换、短时傅里叶变换、小波变换、希尔伯特变换、希尔伯特黄变换\nauthor: Shi Daming\ndate: 2021-06-20 10:00:00 +0800\ncategories: jekyll update\ntags: [FFT, STFT, WT, HT, HHT, signal processing]\npin: true\ntypora-root-url: ..\n---\n\n\n\n对于非平稳信号，其频率特性会随时间变化，为了捕获这一时变特性，我们需要对信号进行时频域分析，包括短时傅里叶变换、小波变换、希尔伯特变换和希尔伯特黄变换，一下注意进行分析。\n\n### 傅里叶变换(Fourier Transform, FT)\n\n简单介绍一下一个连续信号$f(t)$的傅里叶变换和其逆变换\n$$\n\\begin{array}{l}\nF(\\omega)=F[f(t)]=\\int_{-\\infty}^{+\\infty} f(t) e^{-j \\omega t} d t \\\\\nf(t)=F^{-1}[F(\\omega)]=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} F(\\omega) e^{j \\omega t} d \\omega\n\\end{array}\n$$\n\n当然在实际应用中，一般使用离散傅里叶变换\n$$\nX(k)=\\sum_{n=0}^{N-1} x(n) e^{-j2\\pi kn/N}\\\\\nx(n)=\\frac{1}{N}\\sum_{n=0}^{N-1} X(n) e^{j2\\pi kn/N}\n$$\n如果信号的频率特性在任何时间都不发生改变(即该信号是平稳信号)的话，使用傅里叶变换是没有问题的，然而如果该信号是非平稳信号，这时候时域信息就相当重要了。\n\n### 短时傅里叶变换(Short-Time Fourier Transform, STFT)\n\n$$\nX(n, \\omega)=\\sum_{m=-\\infty}^{\\infty} x(m) w(n-m) e^{-j \\omega m}\n$$\n\n其中$w(n-m)$是窗函数，我们可以据此对信号进行时频分析。\n\n### 小波变换(Wavelet Transform, WT)\n\n对于任意能量有限信号$f(t)$，其连续小波变换(CWT)定义为\n$$\nW_{f}(a, b)=\\frac{1}{\\sqrt{a}} \\int_{-\\infty}^{+\\infty} f(t) \\psi^{*}\\left(\\frac{t-b}{a}\\right) d t\n$$\n在低频区域的变换结果具有较高的频率分辨率(频率轴是对数轴，在低频区域跨度较小)，在高频区域具有较高的时间分辨率。\n\n### conclusion\n\n- 对于时域信号，它可以有很高的时间分辨率，然而其频率分辨率为零。\n- 经过傅里叶变换得到的频域信号可以实现很高的频率分辨率，然而其时间分辨率为零。\n- 对于短时傅里叶变换(STFT)，它在时域和频域都有一定的分辨率，并且在全局范围内STFT的时频分辨率都是一样的。但是由于Heisenberg不确定原理(也就是量子力学中的测不准原理)的制约，每一个时频窗的面积都是固定的，即时间分辨率和频率分辨率成反比，所以这两个分辨率不能同时很高。\n- 小波变换在不同时间和频率上具有不同尺寸的时频窗，可以在低频区域实现较高的频率分辨率，然而其仍然受到Heisenberg不确定原理的限制，时间分辨率和频率分辨率不能两全其美。同时小波变换的时频窗并非完全是自适应的，它还需要人为地选择基函数。\n\n上述的方法都会受到Heisenberg不确定原理的限制，而且并不是完全自适应的方法。接下来介绍一种不受Heisenberg不确定原理限制、同时还有更好的自适应性的时频分析方法——希尔伯特黄变换\n\n### 希尔伯特变换(Hilbert Transform, HT)\n\n希尔伯特变换也是傅里叶变换的一种扩展，它常常用于通信系统中的调制解调，当然它也可以用于信号的时频分析。\n\n单频率成分信号，即同一时刻只有一个频率分量的信号，我们可以由Hilbert谱很好地观察出信号的时频特征，且有很高的的时间分辨率，但是信号边界处的误差往往较大。\n\n对多频率成分信号不能直接进行Hilbert变换，我们还需要对其进行进一步处理，将原始信号分解成单频率信号的叠加，这就要用到希尔伯特黄变换中的EMD分解。\n\n### 希尔伯特黄变换(Hilbert-Huang Transform, HHT)\n\n相比于HT，HHT就多了一个经验模态分解(Empirical Mode Decomposition, EMD)，EMD就是把复杂信号分解成从高频到低频的若干个固有模态函数(Intrinsic Mode Function, IMF)，IMF需要满足两个条件：\n\n1. 信号极值点的数量与零点数相等或相差为1\n2. 信号的由极大值定义的上包络和由极小值定义 的下包络的局部均值为0(即包络上下对称)\n\n简单的理解就是，EMD是依次提取信号在每个局部的最高频分量的过程，所以每个IMF实际上是一个单频率分量信号，这样我们就可以对每个IMF分量进行Hilbert变换，从而得到每个分量的Hilbert谱。\n\n当然HHT并不是完美的，目前对于它的关键步骤EMD分解的研究尚不完善，缺乏一些理论基础。HHT在低频区域可能会出现一些不存在的频率分量。\n\nhttps://zhuanlan.zhihu.com/p/150705777\n","slug":"信号处理傅里叶变换、短时傅里叶变换、小波变换、希尔伯特变换、希尔伯特黄变换","published":1,"updated":"2021-06-20T03:37:23.126Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqjgqagg0007dsmp1r8cdlwb","content":"<p>对于非平稳信号，其频率特性会随时间变化，为了捕获这一时变特性，我们需要对信号进行时频域分析，包括短时傅里叶变换、小波变换、希尔伯特变换和希尔伯特黄变换，一下注意进行分析。</p>\n<h3 id=\"傅里叶变换-Fourier-Transform-FT\"><a href=\"#傅里叶变换-Fourier-Transform-FT\" class=\"headerlink\" title=\"傅里叶变换(Fourier Transform, FT)\"></a>傅里叶变换(Fourier Transform, FT)</h3><p>简单介绍一下一个连续信号$f(t)$的傅里叶变换和其逆变换<br>$$<br>\\begin{array}{l}<br>F(\\omega)=F[f(t)]=\\int_{-\\infty}^{+\\infty} f(t) e^{-j \\omega t} d t \\<br>f(t)=F^{-1}[F(\\omega)]=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} F(\\omega) e^{j \\omega t} d \\omega<br>\\end{array}<br>$$</p>\n<p>当然在实际应用中，一般使用离散傅里叶变换<br>$$<br>X(k)=\\sum_{n=0}^{N-1} x(n) e^{-j2\\pi kn/N}\\<br>x(n)=\\frac{1}{N}\\sum_{n=0}^{N-1} X(n) e^{j2\\pi kn/N}<br>$$<br>如果信号的频率特性在任何时间都不发生改变(即该信号是平稳信号)的话，使用傅里叶变换是没有问题的，然而如果该信号是非平稳信号，这时候时域信息就相当重要了。</p>\n<h3 id=\"短时傅里叶变换-Short-Time-Fourier-Transform-STFT\"><a href=\"#短时傅里叶变换-Short-Time-Fourier-Transform-STFT\" class=\"headerlink\" title=\"短时傅里叶变换(Short-Time Fourier Transform, STFT)\"></a>短时傅里叶变换(Short-Time Fourier Transform, STFT)</h3><p>$$<br>X(n, \\omega)=\\sum_{m=-\\infty}^{\\infty} x(m) w(n-m) e^{-j \\omega m}<br>$$</p>\n<p>其中$w(n-m)$是窗函数，我们可以据此对信号进行时频分析。</p>\n<h3 id=\"小波变换-Wavelet-Transform-WT\"><a href=\"#小波变换-Wavelet-Transform-WT\" class=\"headerlink\" title=\"小波变换(Wavelet Transform, WT)\"></a>小波变换(Wavelet Transform, WT)</h3><p>对于任意能量有限信号$f(t)$，其连续小波变换(CWT)定义为<br>$$<br>W_{f}(a, b)=\\frac{1}{\\sqrt{a}} \\int_{-\\infty}^{+\\infty} f(t) \\psi^{*}\\left(\\frac{t-b}{a}\\right) d t<br>$$<br>在低频区域的变换结果具有较高的频率分辨率(频率轴是对数轴，在低频区域跨度较小)，在高频区域具有较高的时间分辨率。</p>\n<h3 id=\"conclusion\"><a href=\"#conclusion\" class=\"headerlink\" title=\"conclusion\"></a>conclusion</h3><ul>\n<li>对于时域信号，它可以有很高的时间分辨率，然而其频率分辨率为零。</li>\n<li>经过傅里叶变换得到的频域信号可以实现很高的频率分辨率，然而其时间分辨率为零。</li>\n<li>对于短时傅里叶变换(STFT)，它在时域和频域都有一定的分辨率，并且在全局范围内STFT的时频分辨率都是一样的。但是由于Heisenberg不确定原理(也就是量子力学中的测不准原理)的制约，每一个时频窗的面积都是固定的，即时间分辨率和频率分辨率成反比，所以这两个分辨率不能同时很高。</li>\n<li>小波变换在不同时间和频率上具有不同尺寸的时频窗，可以在低频区域实现较高的频率分辨率，然而其仍然受到Heisenberg不确定原理的限制，时间分辨率和频率分辨率不能两全其美。同时小波变换的时频窗并非完全是自适应的，它还需要人为地选择基函数。</li>\n</ul>\n<p>上述的方法都会受到Heisenberg不确定原理的限制，而且并不是完全自适应的方法。接下来介绍一种不受Heisenberg不确定原理限制、同时还有更好的自适应性的时频分析方法——希尔伯特黄变换</p>\n<h3 id=\"希尔伯特变换-Hilbert-Transform-HT\"><a href=\"#希尔伯特变换-Hilbert-Transform-HT\" class=\"headerlink\" title=\"希尔伯特变换(Hilbert Transform, HT)\"></a>希尔伯特变换(Hilbert Transform, HT)</h3><p>希尔伯特变换也是傅里叶变换的一种扩展，它常常用于通信系统中的调制解调，当然它也可以用于信号的时频分析。</p>\n<p>单频率成分信号，即同一时刻只有一个频率分量的信号，我们可以由Hilbert谱很好地观察出信号的时频特征，且有很高的的时间分辨率，但是信号边界处的误差往往较大。</p>\n<p>对多频率成分信号不能直接进行Hilbert变换，我们还需要对其进行进一步处理，将原始信号分解成单频率信号的叠加，这就要用到希尔伯特黄变换中的EMD分解。</p>\n<h3 id=\"希尔伯特黄变换-Hilbert-Huang-Transform-HHT\"><a href=\"#希尔伯特黄变换-Hilbert-Huang-Transform-HHT\" class=\"headerlink\" title=\"希尔伯特黄变换(Hilbert-Huang Transform, HHT)\"></a>希尔伯特黄变换(Hilbert-Huang Transform, HHT)</h3><p>相比于HT，HHT就多了一个经验模态分解(Empirical Mode Decomposition, EMD)，EMD就是把复杂信号分解成从高频到低频的若干个固有模态函数(Intrinsic Mode Function, IMF)，IMF需要满足两个条件：</p>\n<ol>\n<li>信号极值点的数量与零点数相等或相差为1</li>\n<li>信号的由极大值定义的上包络和由极小值定义 的下包络的局部均值为0(即包络上下对称)</li>\n</ol>\n<p>简单的理解就是，EMD是依次提取信号在每个局部的最高频分量的过程，所以每个IMF实际上是一个单频率分量信号，这样我们就可以对每个IMF分量进行Hilbert变换，从而得到每个分量的Hilbert谱。</p>\n<p>当然HHT并不是完美的，目前对于它的关键步骤EMD分解的研究尚不完善，缺乏一些理论基础。HHT在低频区域可能会出现一些不存在的频率分量。</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/150705777\">https://zhuanlan.zhihu.com/p/150705777</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>对于非平稳信号，其频率特性会随时间变化，为了捕获这一时变特性，我们需要对信号进行时频域分析，包括短时傅里叶变换、小波变换、希尔伯特变换和希尔伯特黄变换，一下注意进行分析。</p>\n<h3 id=\"傅里叶变换-Fourier-Transform-FT\"><a href=\"#傅里叶变换-Fourier-Transform-FT\" class=\"headerlink\" title=\"傅里叶变换(Fourier Transform, FT)\"></a>傅里叶变换(Fourier Transform, FT)</h3><p>简单介绍一下一个连续信号$f(t)$的傅里叶变换和其逆变换<br>$$<br>\\begin{array}{l}<br>F(\\omega)=F[f(t)]=\\int_{-\\infty}^{+\\infty} f(t) e^{-j \\omega t} d t \\<br>f(t)=F^{-1}[F(\\omega)]=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} F(\\omega) e^{j \\omega t} d \\omega<br>\\end{array}<br>$$</p>\n<p>当然在实际应用中，一般使用离散傅里叶变换<br>$$<br>X(k)=\\sum_{n=0}^{N-1} x(n) e^{-j2\\pi kn/N}\\<br>x(n)=\\frac{1}{N}\\sum_{n=0}^{N-1} X(n) e^{j2\\pi kn/N}<br>$$<br>如果信号的频率特性在任何时间都不发生改变(即该信号是平稳信号)的话，使用傅里叶变换是没有问题的，然而如果该信号是非平稳信号，这时候时域信息就相当重要了。</p>\n<h3 id=\"短时傅里叶变换-Short-Time-Fourier-Transform-STFT\"><a href=\"#短时傅里叶变换-Short-Time-Fourier-Transform-STFT\" class=\"headerlink\" title=\"短时傅里叶变换(Short-Time Fourier Transform, STFT)\"></a>短时傅里叶变换(Short-Time Fourier Transform, STFT)</h3><p>$$<br>X(n, \\omega)=\\sum_{m=-\\infty}^{\\infty} x(m) w(n-m) e^{-j \\omega m}<br>$$</p>\n<p>其中$w(n-m)$是窗函数，我们可以据此对信号进行时频分析。</p>\n<h3 id=\"小波变换-Wavelet-Transform-WT\"><a href=\"#小波变换-Wavelet-Transform-WT\" class=\"headerlink\" title=\"小波变换(Wavelet Transform, WT)\"></a>小波变换(Wavelet Transform, WT)</h3><p>对于任意能量有限信号$f(t)$，其连续小波变换(CWT)定义为<br>$$<br>W_{f}(a, b)=\\frac{1}{\\sqrt{a}} \\int_{-\\infty}^{+\\infty} f(t) \\psi^{*}\\left(\\frac{t-b}{a}\\right) d t<br>$$<br>在低频区域的变换结果具有较高的频率分辨率(频率轴是对数轴，在低频区域跨度较小)，在高频区域具有较高的时间分辨率。</p>\n<h3 id=\"conclusion\"><a href=\"#conclusion\" class=\"headerlink\" title=\"conclusion\"></a>conclusion</h3><ul>\n<li>对于时域信号，它可以有很高的时间分辨率，然而其频率分辨率为零。</li>\n<li>经过傅里叶变换得到的频域信号可以实现很高的频率分辨率，然而其时间分辨率为零。</li>\n<li>对于短时傅里叶变换(STFT)，它在时域和频域都有一定的分辨率，并且在全局范围内STFT的时频分辨率都是一样的。但是由于Heisenberg不确定原理(也就是量子力学中的测不准原理)的制约，每一个时频窗的面积都是固定的，即时间分辨率和频率分辨率成反比，所以这两个分辨率不能同时很高。</li>\n<li>小波变换在不同时间和频率上具有不同尺寸的时频窗，可以在低频区域实现较高的频率分辨率，然而其仍然受到Heisenberg不确定原理的限制，时间分辨率和频率分辨率不能两全其美。同时小波变换的时频窗并非完全是自适应的，它还需要人为地选择基函数。</li>\n</ul>\n<p>上述的方法都会受到Heisenberg不确定原理的限制，而且并不是完全自适应的方法。接下来介绍一种不受Heisenberg不确定原理限制、同时还有更好的自适应性的时频分析方法——希尔伯特黄变换</p>\n<h3 id=\"希尔伯特变换-Hilbert-Transform-HT\"><a href=\"#希尔伯特变换-Hilbert-Transform-HT\" class=\"headerlink\" title=\"希尔伯特变换(Hilbert Transform, HT)\"></a>希尔伯特变换(Hilbert Transform, HT)</h3><p>希尔伯特变换也是傅里叶变换的一种扩展，它常常用于通信系统中的调制解调，当然它也可以用于信号的时频分析。</p>\n<p>单频率成分信号，即同一时刻只有一个频率分量的信号，我们可以由Hilbert谱很好地观察出信号的时频特征，且有很高的的时间分辨率，但是信号边界处的误差往往较大。</p>\n<p>对多频率成分信号不能直接进行Hilbert变换，我们还需要对其进行进一步处理，将原始信号分解成单频率信号的叠加，这就要用到希尔伯特黄变换中的EMD分解。</p>\n<h3 id=\"希尔伯特黄变换-Hilbert-Huang-Transform-HHT\"><a href=\"#希尔伯特黄变换-Hilbert-Huang-Transform-HHT\" class=\"headerlink\" title=\"希尔伯特黄变换(Hilbert-Huang Transform, HHT)\"></a>希尔伯特黄变换(Hilbert-Huang Transform, HHT)</h3><p>相比于HT，HHT就多了一个经验模态分解(Empirical Mode Decomposition, EMD)，EMD就是把复杂信号分解成从高频到低频的若干个固有模态函数(Intrinsic Mode Function, IMF)，IMF需要满足两个条件：</p>\n<ol>\n<li>信号极值点的数量与零点数相等或相差为1</li>\n<li>信号的由极大值定义的上包络和由极小值定义 的下包络的局部均值为0(即包络上下对称)</li>\n</ol>\n<p>简单的理解就是，EMD是依次提取信号在每个局部的最高频分量的过程，所以每个IMF实际上是一个单频率分量信号，这样我们就可以对每个IMF分量进行Hilbert变换，从而得到每个分量的Hilbert谱。</p>\n<p>当然HHT并不是完美的，目前对于它的关键步骤EMD分解的研究尚不完善，缺乏一些理论基础。HHT在低频区域可能会出现一些不存在的频率分量。</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/150705777\">https://zhuanlan.zhihu.com/p/150705777</a></p>\n"},{"title":"Matlab作图：更改图像、填充或曲面的透明度","author":"Shi Daming","date":"2021-04-06T09:00:00.000Z","pin":true,"_content":"\n**目录**\n\n \\- [一、坐标区框中所有对象的透明度](#一坐标区框中所有对象的透明度)\n\n \\- [二、个别曲面的透明度](#二个别曲面的透明度)\n\n \\- [三、个别图像的透明度](#三个别图像的透明度)\n\n \\- [四、个别填充的透明度](#四个别填充的透明度)\n\n \\- [五、包含纹理映射的透明度](#五包含纹理映射的透明度)\n\n### 一、坐标区框中所有对象的透明度\n\n透明度值称为 alpha 值。使用 `alpha` 函数设置当前坐标区范围内所有图像、填充或曲面对象的透明度。指定一个介于 0（完全透明）和 1（完全不透明）之间的透明度值。\n\n```\nt = 0:0.1:2*pi;\nx = sin(t);\ny = cos(t);\n\nfigure\npatch(x,y,'r')            % make a red circular patch\npatch(x+0.8,y,'g')        % make a green circular path\npatch(x+0.4,y+0.8,'b')    % make a blue circular path\naxis square tight         % set axis to square\n\nalpha(0.3)                % set all patches transparency to 0.3\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_01_zh_CN.png)\n\n### 二、个别曲面的透明度\n\n曲面的透明度由其 `AlphaData` 属性定义。将 alpha 数据设置为用于指定曲面的每个顶点透明度的标量值或值矩阵。`FaceAlpha` 属性指示如何从顶点透明度确定曲面透明度。\n\n```\n[X,Y,Z] = peaks(20);\ns2 = surf(X,Y,Z);\n\ns2.AlphaData = gradient(Z);    % set vertex transparencies\ns2.FaceAlpha = 'flat';\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_02_zh_CN.png)\n\n### 三、个别图像的透明度\n\n与曲面一样，图像的透明度也由其 `AlphaData` 属性定义。对于图像，将 alpha 数据设置为用于指定图像数据的每个元素透明度的标量值或值矩阵。\n\n例如，使用透明度覆盖两个图像。首先，显示地球的图像。\n\n```\nearth = imread('landOcean.jpg');\nimage(earth)    % display Earth image\naxis image\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_03_zh_CN.png)\n\n然后，使用透明度将云图层添加到地球图像。\n\n```\nclouds = imread('cloudCombined.jpg');\nimage(earth)\naxis image\nhold on\n\nim = image(clouds);\nim.AlphaData = max(clouds,[],3);    % set transparency to maximum cloud value\nhold off\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_04_zh_CN.png)\n\n### 四、个别填充的透明度\n\n填充的透明度由其 `FaceAlpha` 和 `FaceVertexAlphaData` 属性定义。若要在整个填充上实现单一的透明度，请将 `FaceVertexAlphaData` 设置为一个介于 0（完全透明）和 1（完全不透明）之间的常量，并将 `FaceAlpha` 属性设置为 `'flat'`。\n\n```\ncla\np1 = patch(x,y,'r');             % make a red circular patch\naxis square tight                % set axis to square\n\np1.FaceVertexAlphaData = 0.2;    % Set constant transparency \np1.FaceAlpha = 'flat' ;          % Interpolate to find face transparency\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_05_zh_CN.png)\n\n若要在整个填充上实现可变的透明度，请将 `FaceVertexAlphaData` 设置为用于指定填充的每个顶点或每个面的透明度的值矩阵。然后，通过 `FaceAlpha` 属性指示如何使用 `FaceVertexAlphaData` 确定面的透明度。如果为顶点指定了 alpha 数据，则必须将 `FaceAlpha` 设置为 `'interp'`。\n\n```\np1.FaceVertexAlphaData = x';   % Set vertex transparency to x values\np1.FaceAlpha = 'interp' ;      % Interpolate to find face transparency\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_06_zh_CN.png)\n\n### 五、包含纹理映射的透明度\n\n纹理映射将二维图像映射到三维曲面上。通过将 `CData` 属性设置为图像数据并将 `FaceColor` 属性设置为 `'texturemap'`，可将图像映射到曲面上。\n\n此示例创建地球和云的三维视图。它创建球形表面，并使用纹理映射将地球和云的图像映射到曲面上。\n\n```\n[px,py,pz] = sphere(50);                % generate coordinates for a 50 x 50 sphere\n\ncla\nsEarth = surface(py, px ,flip(pz));   \nsEarth.FaceColor = 'texturemap';        % set color to texture mapping\nsEarth.EdgeColor = 'none';              % remove surface edge color\nsEarth.CData = earth;                   % set color data \n\nhold on\nsCloud = surface(px*1.02,py*1.02,flip(pz)*1.02); \n\nsCloud.FaceColor = 'texturemap';        % set color to texture mapping\nsCloud.EdgeColor = 'none';              % remove surface edge color\nsCloud.CData = clouds;                  % set color data \n \nsCloud.FaceAlpha = 'texturemap';        % set transparency to texture mapping\nsCloud.AlphaData = max(clouds,[],3);    % set transparency data \nhold off\n\nview([80 2])                            % specify viewpoint \ndaspect([1 1 1])                        % set aspect ratio\naxis off tight                          % remove axis and set limits to data range\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_07_zh_CN.png)","source":"_posts/2021-04-06-Matlab颜色进阶.md","raw":"---\ntitle: Matlab作图：更改图像、填充或曲面的透明度\nauthor: Shi Daming\ndate: 2021-04-06 17:00:00 +0800\ncategories: jekyll update\ntags: [Matlab, transparency]\npin: true\n---\n\n**目录**\n\n \\- [一、坐标区框中所有对象的透明度](#一坐标区框中所有对象的透明度)\n\n \\- [二、个别曲面的透明度](#二个别曲面的透明度)\n\n \\- [三、个别图像的透明度](#三个别图像的透明度)\n\n \\- [四、个别填充的透明度](#四个别填充的透明度)\n\n \\- [五、包含纹理映射的透明度](#五包含纹理映射的透明度)\n\n### 一、坐标区框中所有对象的透明度\n\n透明度值称为 alpha 值。使用 `alpha` 函数设置当前坐标区范围内所有图像、填充或曲面对象的透明度。指定一个介于 0（完全透明）和 1（完全不透明）之间的透明度值。\n\n```\nt = 0:0.1:2*pi;\nx = sin(t);\ny = cos(t);\n\nfigure\npatch(x,y,'r')            % make a red circular patch\npatch(x+0.8,y,'g')        % make a green circular path\npatch(x+0.4,y+0.8,'b')    % make a blue circular path\naxis square tight         % set axis to square\n\nalpha(0.3)                % set all patches transparency to 0.3\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_01_zh_CN.png)\n\n### 二、个别曲面的透明度\n\n曲面的透明度由其 `AlphaData` 属性定义。将 alpha 数据设置为用于指定曲面的每个顶点透明度的标量值或值矩阵。`FaceAlpha` 属性指示如何从顶点透明度确定曲面透明度。\n\n```\n[X,Y,Z] = peaks(20);\ns2 = surf(X,Y,Z);\n\ns2.AlphaData = gradient(Z);    % set vertex transparencies\ns2.FaceAlpha = 'flat';\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_02_zh_CN.png)\n\n### 三、个别图像的透明度\n\n与曲面一样，图像的透明度也由其 `AlphaData` 属性定义。对于图像，将 alpha 数据设置为用于指定图像数据的每个元素透明度的标量值或值矩阵。\n\n例如，使用透明度覆盖两个图像。首先，显示地球的图像。\n\n```\nearth = imread('landOcean.jpg');\nimage(earth)    % display Earth image\naxis image\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_03_zh_CN.png)\n\n然后，使用透明度将云图层添加到地球图像。\n\n```\nclouds = imread('cloudCombined.jpg');\nimage(earth)\naxis image\nhold on\n\nim = image(clouds);\nim.AlphaData = max(clouds,[],3);    % set transparency to maximum cloud value\nhold off\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_04_zh_CN.png)\n\n### 四、个别填充的透明度\n\n填充的透明度由其 `FaceAlpha` 和 `FaceVertexAlphaData` 属性定义。若要在整个填充上实现单一的透明度，请将 `FaceVertexAlphaData` 设置为一个介于 0（完全透明）和 1（完全不透明）之间的常量，并将 `FaceAlpha` 属性设置为 `'flat'`。\n\n```\ncla\np1 = patch(x,y,'r');             % make a red circular patch\naxis square tight                % set axis to square\n\np1.FaceVertexAlphaData = 0.2;    % Set constant transparency \np1.FaceAlpha = 'flat' ;          % Interpolate to find face transparency\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_05_zh_CN.png)\n\n若要在整个填充上实现可变的透明度，请将 `FaceVertexAlphaData` 设置为用于指定填充的每个顶点或每个面的透明度的值矩阵。然后，通过 `FaceAlpha` 属性指示如何使用 `FaceVertexAlphaData` 确定面的透明度。如果为顶点指定了 alpha 数据，则必须将 `FaceAlpha` 设置为 `'interp'`。\n\n```\np1.FaceVertexAlphaData = x';   % Set vertex transparency to x values\np1.FaceAlpha = 'interp' ;      % Interpolate to find face transparency\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_06_zh_CN.png)\n\n### 五、包含纹理映射的透明度\n\n纹理映射将二维图像映射到三维曲面上。通过将 `CData` 属性设置为图像数据并将 `FaceColor` 属性设置为 `'texturemap'`，可将图像映射到曲面上。\n\n此示例创建地球和云的三维视图。它创建球形表面，并使用纹理映射将地球和云的图像映射到曲面上。\n\n```\n[px,py,pz] = sphere(50);                % generate coordinates for a 50 x 50 sphere\n\ncla\nsEarth = surface(py, px ,flip(pz));   \nsEarth.FaceColor = 'texturemap';        % set color to texture mapping\nsEarth.EdgeColor = 'none';              % remove surface edge color\nsEarth.CData = earth;                   % set color data \n\nhold on\nsCloud = surface(px*1.02,py*1.02,flip(pz)*1.02); \n\nsCloud.FaceColor = 'texturemap';        % set color to texture mapping\nsCloud.EdgeColor = 'none';              % remove surface edge color\nsCloud.CData = clouds;                  % set color data \n \nsCloud.FaceAlpha = 'texturemap';        % set transparency to texture mapping\nsCloud.AlphaData = max(clouds,[],3);    % set transparency data \nhold off\n\nview([80 2])                            % specify viewpoint \ndaspect([1 1 1])                        % set aspect ratio\naxis off tight                          % remove axis and set limits to data range\n```\n\n![img](https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_07_zh_CN.png)","slug":"Matlab颜色进阶","published":1,"updated":"2021-06-09T01:21:17.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqjgqagi000bdsmp1dw20n4s","content":"<p><strong>目录</strong></p>\n<p> - <a href=\"#%E4%B8%80%E5%9D%90%E6%A0%87%E5%8C%BA%E6%A1%86%E4%B8%AD%E6%89%80%E6%9C%89%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">一、坐标区框中所有对象的透明度</a></p>\n<p> - <a href=\"#%E4%BA%8C%E4%B8%AA%E5%88%AB%E6%9B%B2%E9%9D%A2%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">二、个别曲面的透明度</a></p>\n<p> - <a href=\"#%E4%B8%89%E4%B8%AA%E5%88%AB%E5%9B%BE%E5%83%8F%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">三、个别图像的透明度</a></p>\n<p> - <a href=\"#%E5%9B%9B%E4%B8%AA%E5%88%AB%E5%A1%AB%E5%85%85%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">四、个别填充的透明度</a></p>\n<p> - <a href=\"#%E4%BA%94%E5%8C%85%E5%90%AB%E7%BA%B9%E7%90%86%E6%98%A0%E5%B0%84%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">五、包含纹理映射的透明度</a></p>\n<h3 id=\"一、坐标区框中所有对象的透明度\"><a href=\"#一、坐标区框中所有对象的透明度\" class=\"headerlink\" title=\"一、坐标区框中所有对象的透明度\"></a>一、坐标区框中所有对象的透明度</h3><p>透明度值称为 alpha 值。使用 <code>alpha</code> 函数设置当前坐标区范围内所有图像、填充或曲面对象的透明度。指定一个介于 0（完全透明）和 1（完全不透明）之间的透明度值。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">t</span> = <span class=\"hljs-number\">0</span>:<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">2</span>*pi;<br><span class=\"hljs-attribute\">x</span> = sin(t);<br><span class=\"hljs-attribute\">y</span> = cos(t);<br><br><span class=\"hljs-attribute\">figure</span><br><span class=\"hljs-attribute\">patch</span>(x,y,&#x27;r&#x27;)            % make a red circular patch<br><span class=\"hljs-attribute\">patch</span>(x+<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8</span>,y,&#x27;g&#x27;)        % make a green circular path<br><span class=\"hljs-attribute\">patch</span>(x+<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">4</span>,y+<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8</span>,&#x27;b&#x27;)    % make a blue circular path<br><span class=\"hljs-attribute\">axis</span> square tight         % set axis to square<br><br><span class=\"hljs-attribute\">alpha</span>(<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">3</span>)                % set <span class=\"hljs-literal\">all</span> patches transparency to <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">3</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_01_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"二、个别曲面的透明度\"><a href=\"#二、个别曲面的透明度\" class=\"headerlink\" title=\"二、个别曲面的透明度\"></a>二、个别曲面的透明度</h3><p>曲面的透明度由其 <code>AlphaData</code> 属性定义。将 alpha 数据设置为用于指定曲面的每个顶点透明度的标量值或值矩阵。<code>FaceAlpha</code> 属性指示如何从顶点透明度确定曲面透明度。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>] = peaks(<span class=\"hljs-number\">20</span>);<br>s<span class=\"hljs-number\">2</span> = surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>);<br><br>s<span class=\"hljs-number\">2</span>.AlphaData = gradient(<span class=\"hljs-keyword\">Z</span>);    % set vertex transparencies<br>s<span class=\"hljs-number\">2</span>.FaceAlpha = <span class=\"hljs-string\">&#x27;flat&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_02_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"三、个别图像的透明度\"><a href=\"#三、个别图像的透明度\" class=\"headerlink\" title=\"三、个别图像的透明度\"></a>三、个别图像的透明度</h3><p>与曲面一样，图像的透明度也由其 <code>AlphaData</code> 属性定义。对于图像，将 alpha 数据设置为用于指定图像数据的每个元素透明度的标量值或值矩阵。</p>\n<p>例如，使用透明度覆盖两个图像。首先，显示地球的图像。</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">earth = imread(&#x27;landOcean.jpg&#x27;);<br><span class=\"hljs-built_in\">image</span>(earth)    <span class=\"hljs-symbol\">%</span> <span class=\"hljs-built_in\">display</span> Earth <span class=\"hljs-built_in\">image</span><br>axis <span class=\"hljs-built_in\">image</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_03_zh_CN.png\" alt=\"img\"></p>\n<p>然后，使用透明度将云图层添加到地球图像。</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">clouds = imread(<span class=\"hljs-string\">&#x27;cloudCombined.jpg&#x27;</span>);<br><span class=\"hljs-built_in\">image</span>(earth)<br>axis <span class=\"hljs-built_in\">image</span><br>hold on<br><br>im = <span class=\"hljs-built_in\">image</span>(clouds);<br>im.AlphaData = <span class=\"hljs-built_in\">max</span>(clouds,[],<span class=\"hljs-number\">3</span>);    % <span class=\"hljs-built_in\">set</span> transparency <span class=\"hljs-keyword\">to</span> maximum cloud value<br>hold off<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_04_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"四、个别填充的透明度\"><a href=\"#四、个别填充的透明度\" class=\"headerlink\" title=\"四、个别填充的透明度\"></a>四、个别填充的透明度</h3><p>填充的透明度由其 <code>FaceAlpha</code> 和 <code>FaceVertexAlphaData</code> 属性定义。若要在整个填充上实现单一的透明度，请将 <code>FaceVertexAlphaData</code> 设置为一个介于 0（完全透明）和 1（完全不透明）之间的常量，并将 <code>FaceAlpha</code> 属性设置为 <code>&#39;flat&#39;</code>。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">cla<br>p1 = patch(x,y,<span class=\"hljs-string\">&#x27;r&#x27;</span>);             % make a red circular patch<br>axis square tight                % <span class=\"hljs-builtin-name\">set</span> axis <span class=\"hljs-keyword\">to</span> square<br><br>p1.FaceVertexAlphaData = 0.2;    % <span class=\"hljs-builtin-name\">Set</span> constant transparency <br>p1.FaceAlpha = <span class=\"hljs-string\">&#x27;flat&#x27;</span> ;          % Interpolate <span class=\"hljs-keyword\">to</span> <span class=\"hljs-builtin-name\">find</span> face transparency<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_05_zh_CN.png\" alt=\"img\"></p>\n<p>若要在整个填充上实现可变的透明度，请将 <code>FaceVertexAlphaData</code> 设置为用于指定填充的每个顶点或每个面的透明度的值矩阵。然后，通过 <code>FaceAlpha</code> 属性指示如何使用 <code>FaceVertexAlphaData</code> 确定面的透明度。如果为顶点指定了 alpha 数据，则必须将 <code>FaceAlpha</code> 设置为 <code>&#39;interp&#39;</code>。</p>\n<figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs erlang-repl\">p1.FaceVertexAlphaData = x&#x27;;   <span class=\"hljs-comment\">% Set vertex transparency to x values</span><br>p1.FaceAlpha = <span class=\"hljs-string\">&#x27;interp&#x27;</span> ;      <span class=\"hljs-comment\">% Interpolate to find face transparency</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_06_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"五、包含纹理映射的透明度\"><a href=\"#五、包含纹理映射的透明度\" class=\"headerlink\" title=\"五、包含纹理映射的透明度\"></a>五、包含纹理映射的透明度</h3><p>纹理映射将二维图像映射到三维曲面上。通过将 <code>CData</code> 属性设置为图像数据并将 <code>FaceColor</code> 属性设置为 <code>&#39;texturemap&#39;</code>，可将图像映射到曲面上。</p>\n<p>此示例创建地球和云的三维视图。它创建球形表面，并使用纹理映射将地球和云的图像映射到曲面上。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">[px,py,pz] = sphere(50);                % generate coordinates <span class=\"hljs-keyword\">for</span> a 50 x 50 sphere<br><br>cla<br>sEarth = surface(py, px ,flip(pz));   <br>sEarth.FaceColor = <span class=\"hljs-string\">&#x27;texturemap&#x27;</span>;        % <span class=\"hljs-builtin-name\">set</span> color <span class=\"hljs-keyword\">to</span> texture mapping<br>sEarth.EdgeColor = <span class=\"hljs-string\">&#x27;none&#x27;</span>;              % <span class=\"hljs-builtin-name\">remove</span> surface edge color<br>sEarth.CData = earth;                   % <span class=\"hljs-builtin-name\">set</span> color data <br><br>hold on<br>sCloud = surface(px<span class=\"hljs-number\">*1</span>.02,py<span class=\"hljs-number\">*1</span>.02,flip(pz)<span class=\"hljs-number\">*1</span>.02); <br><br>sCloud.FaceColor = <span class=\"hljs-string\">&#x27;texturemap&#x27;</span>;        % <span class=\"hljs-builtin-name\">set</span> color <span class=\"hljs-keyword\">to</span> texture mapping<br>sCloud.EdgeColor = <span class=\"hljs-string\">&#x27;none&#x27;</span>;              % <span class=\"hljs-builtin-name\">remove</span> surface edge color<br>sCloud.CData = clouds;                  % <span class=\"hljs-builtin-name\">set</span> color data <br> <br>sCloud.FaceAlpha = <span class=\"hljs-string\">&#x27;texturemap&#x27;</span>;        % <span class=\"hljs-builtin-name\">set</span> transparency <span class=\"hljs-keyword\">to</span> texture mapping<br>sCloud.AlphaData = max(clouds,[],3);    % <span class=\"hljs-builtin-name\">set</span> transparency data <br>hold off<br><br>view([80 2])                            % specify viewpoint <br>daspect([1 1 1])                        % <span class=\"hljs-builtin-name\">set</span> aspect ratio<br>axis off tight                          % <span class=\"hljs-builtin-name\">remove</span> axis <span class=\"hljs-keyword\">and</span> <span class=\"hljs-builtin-name\">set</span> limits <span class=\"hljs-keyword\">to</span> data range<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_07_zh_CN.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>目录</strong></p>\n<p> - <a href=\"#%E4%B8%80%E5%9D%90%E6%A0%87%E5%8C%BA%E6%A1%86%E4%B8%AD%E6%89%80%E6%9C%89%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">一、坐标区框中所有对象的透明度</a></p>\n<p> - <a href=\"#%E4%BA%8C%E4%B8%AA%E5%88%AB%E6%9B%B2%E9%9D%A2%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">二、个别曲面的透明度</a></p>\n<p> - <a href=\"#%E4%B8%89%E4%B8%AA%E5%88%AB%E5%9B%BE%E5%83%8F%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">三、个别图像的透明度</a></p>\n<p> - <a href=\"#%E5%9B%9B%E4%B8%AA%E5%88%AB%E5%A1%AB%E5%85%85%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">四、个别填充的透明度</a></p>\n<p> - <a href=\"#%E4%BA%94%E5%8C%85%E5%90%AB%E7%BA%B9%E7%90%86%E6%98%A0%E5%B0%84%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6\">五、包含纹理映射的透明度</a></p>\n<h3 id=\"一、坐标区框中所有对象的透明度\"><a href=\"#一、坐标区框中所有对象的透明度\" class=\"headerlink\" title=\"一、坐标区框中所有对象的透明度\"></a>一、坐标区框中所有对象的透明度</h3><p>透明度值称为 alpha 值。使用 <code>alpha</code> 函数设置当前坐标区范围内所有图像、填充或曲面对象的透明度。指定一个介于 0（完全透明）和 1（完全不透明）之间的透明度值。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">t</span> = <span class=\"hljs-number\">0</span>:<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">2</span>*pi;<br><span class=\"hljs-attribute\">x</span> = sin(t);<br><span class=\"hljs-attribute\">y</span> = cos(t);<br><br><span class=\"hljs-attribute\">figure</span><br><span class=\"hljs-attribute\">patch</span>(x,y,&#x27;r&#x27;)            % make a red circular patch<br><span class=\"hljs-attribute\">patch</span>(x+<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8</span>,y,&#x27;g&#x27;)        % make a green circular path<br><span class=\"hljs-attribute\">patch</span>(x+<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">4</span>,y+<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8</span>,&#x27;b&#x27;)    % make a blue circular path<br><span class=\"hljs-attribute\">axis</span> square tight         % set axis to square<br><br><span class=\"hljs-attribute\">alpha</span>(<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">3</span>)                % set <span class=\"hljs-literal\">all</span> patches transparency to <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">3</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_01_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"二、个别曲面的透明度\"><a href=\"#二、个别曲面的透明度\" class=\"headerlink\" title=\"二、个别曲面的透明度\"></a>二、个别曲面的透明度</h3><p>曲面的透明度由其 <code>AlphaData</code> 属性定义。将 alpha 数据设置为用于指定曲面的每个顶点透明度的标量值或值矩阵。<code>FaceAlpha</code> 属性指示如何从顶点透明度确定曲面透明度。</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tp\">[<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>] = peaks(<span class=\"hljs-number\">20</span>);<br>s<span class=\"hljs-number\">2</span> = surf(<span class=\"hljs-keyword\">X</span>,<span class=\"hljs-keyword\">Y</span>,<span class=\"hljs-keyword\">Z</span>);<br><br>s<span class=\"hljs-number\">2</span>.AlphaData = gradient(<span class=\"hljs-keyword\">Z</span>);    % set vertex transparencies<br>s<span class=\"hljs-number\">2</span>.FaceAlpha = <span class=\"hljs-string\">&#x27;flat&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_02_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"三、个别图像的透明度\"><a href=\"#三、个别图像的透明度\" class=\"headerlink\" title=\"三、个别图像的透明度\"></a>三、个别图像的透明度</h3><p>与曲面一样，图像的透明度也由其 <code>AlphaData</code> 属性定义。对于图像，将 alpha 数据设置为用于指定图像数据的每个元素透明度的标量值或值矩阵。</p>\n<p>例如，使用透明度覆盖两个图像。首先，显示地球的图像。</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">earth = imread(&#x27;landOcean.jpg&#x27;);<br><span class=\"hljs-built_in\">image</span>(earth)    <span class=\"hljs-symbol\">%</span> <span class=\"hljs-built_in\">display</span> Earth <span class=\"hljs-built_in\">image</span><br>axis <span class=\"hljs-built_in\">image</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_03_zh_CN.png\" alt=\"img\"></p>\n<p>然后，使用透明度将云图层添加到地球图像。</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">clouds = imread(<span class=\"hljs-string\">&#x27;cloudCombined.jpg&#x27;</span>);<br><span class=\"hljs-built_in\">image</span>(earth)<br>axis <span class=\"hljs-built_in\">image</span><br>hold on<br><br>im = <span class=\"hljs-built_in\">image</span>(clouds);<br>im.AlphaData = <span class=\"hljs-built_in\">max</span>(clouds,[],<span class=\"hljs-number\">3</span>);    % <span class=\"hljs-built_in\">set</span> transparency <span class=\"hljs-keyword\">to</span> maximum cloud value<br>hold off<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_04_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"四、个别填充的透明度\"><a href=\"#四、个别填充的透明度\" class=\"headerlink\" title=\"四、个别填充的透明度\"></a>四、个别填充的透明度</h3><p>填充的透明度由其 <code>FaceAlpha</code> 和 <code>FaceVertexAlphaData</code> 属性定义。若要在整个填充上实现单一的透明度，请将 <code>FaceVertexAlphaData</code> 设置为一个介于 0（完全透明）和 1（完全不透明）之间的常量，并将 <code>FaceAlpha</code> 属性设置为 <code>&#39;flat&#39;</code>。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">cla<br>p1 = patch(x,y,<span class=\"hljs-string\">&#x27;r&#x27;</span>);             % make a red circular patch<br>axis square tight                % <span class=\"hljs-builtin-name\">set</span> axis <span class=\"hljs-keyword\">to</span> square<br><br>p1.FaceVertexAlphaData = 0.2;    % <span class=\"hljs-builtin-name\">Set</span> constant transparency <br>p1.FaceAlpha = <span class=\"hljs-string\">&#x27;flat&#x27;</span> ;          % Interpolate <span class=\"hljs-keyword\">to</span> <span class=\"hljs-builtin-name\">find</span> face transparency<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_05_zh_CN.png\" alt=\"img\"></p>\n<p>若要在整个填充上实现可变的透明度，请将 <code>FaceVertexAlphaData</code> 设置为用于指定填充的每个顶点或每个面的透明度的值矩阵。然后，通过 <code>FaceAlpha</code> 属性指示如何使用 <code>FaceVertexAlphaData</code> 确定面的透明度。如果为顶点指定了 alpha 数据，则必须将 <code>FaceAlpha</code> 设置为 <code>&#39;interp&#39;</code>。</p>\n<figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs erlang-repl\">p1.FaceVertexAlphaData = x&#x27;;   <span class=\"hljs-comment\">% Set vertex transparency to x values</span><br>p1.FaceAlpha = <span class=\"hljs-string\">&#x27;interp&#x27;</span> ;      <span class=\"hljs-comment\">% Interpolate to find face transparency</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_06_zh_CN.png\" alt=\"img\"></p>\n<h3 id=\"五、包含纹理映射的透明度\"><a href=\"#五、包含纹理映射的透明度\" class=\"headerlink\" title=\"五、包含纹理映射的透明度\"></a>五、包含纹理映射的透明度</h3><p>纹理映射将二维图像映射到三维曲面上。通过将 <code>CData</code> 属性设置为图像数据并将 <code>FaceColor</code> 属性设置为 <code>&#39;texturemap&#39;</code>，可将图像映射到曲面上。</p>\n<p>此示例创建地球和云的三维视图。它创建球形表面，并使用纹理映射将地球和云的图像映射到曲面上。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">[px,py,pz] = sphere(50);                % generate coordinates <span class=\"hljs-keyword\">for</span> a 50 x 50 sphere<br><br>cla<br>sEarth = surface(py, px ,flip(pz));   <br>sEarth.FaceColor = <span class=\"hljs-string\">&#x27;texturemap&#x27;</span>;        % <span class=\"hljs-builtin-name\">set</span> color <span class=\"hljs-keyword\">to</span> texture mapping<br>sEarth.EdgeColor = <span class=\"hljs-string\">&#x27;none&#x27;</span>;              % <span class=\"hljs-builtin-name\">remove</span> surface edge color<br>sEarth.CData = earth;                   % <span class=\"hljs-builtin-name\">set</span> color data <br><br>hold on<br>sCloud = surface(px<span class=\"hljs-number\">*1</span>.02,py<span class=\"hljs-number\">*1</span>.02,flip(pz)<span class=\"hljs-number\">*1</span>.02); <br><br>sCloud.FaceColor = <span class=\"hljs-string\">&#x27;texturemap&#x27;</span>;        % <span class=\"hljs-builtin-name\">set</span> color <span class=\"hljs-keyword\">to</span> texture mapping<br>sCloud.EdgeColor = <span class=\"hljs-string\">&#x27;none&#x27;</span>;              % <span class=\"hljs-builtin-name\">remove</span> surface edge color<br>sCloud.CData = clouds;                  % <span class=\"hljs-builtin-name\">set</span> color data <br> <br>sCloud.FaceAlpha = <span class=\"hljs-string\">&#x27;texturemap&#x27;</span>;        % <span class=\"hljs-builtin-name\">set</span> transparency <span class=\"hljs-keyword\">to</span> texture mapping<br>sCloud.AlphaData = max(clouds,[],3);    % <span class=\"hljs-builtin-name\">set</span> transparency data <br>hold off<br><br>view([80 2])                            % specify viewpoint <br>daspect([1 1 1])                        % <span class=\"hljs-builtin-name\">set</span> aspect ratio<br>axis off tight                          % <span class=\"hljs-builtin-name\">remove</span> axis <span class=\"hljs-keyword\">and</span> <span class=\"hljs-builtin-name\">set</span> limits <span class=\"hljs-keyword\">to</span> data range<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://ww2.mathworks.cn/help/matlab/creating_plots/changingtransparencyexample_07_zh_CN.png\" alt=\"img\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckqjgqagf0006dsmp5z8tggp7","category_id":"ckqjgqagc0003dsmpguy73gnk","_id":"ckqjgqagj000cdsmp69rx06ux"},{"post_id":"ckqjgqag80001dsmp3jh8ad1b","category_id":"ckqjgqagc0003dsmpguy73gnk","_id":"ckqjgqagk000fdsmp23x9g877"},{"post_id":"ckqjgqagg0007dsmp1r8cdlwb","category_id":"ckqjgqagc0003dsmpguy73gnk","_id":"ckqjgqagk000gdsmpbfet3i2g"},{"post_id":"ckqjgqagi000bdsmp1dw20n4s","category_id":"ckqjgqagc0003dsmpguy73gnk","_id":"ckqjgqagl000idsmp5x4ihxtl"},{"post_id":"ckqjgqagb0002dsmpcxbg6tyd","category_id":"ckqjgqagc0003dsmpguy73gnk","_id":"ckqjgqagl000jdsmp7bv5hcju"},{"post_id":"ckqjgqage0005dsmp5vo06hp5","category_id":"ckqjgqagc0003dsmpguy73gnk","_id":"ckqjgqagl000ldsmp5twb0df0"}],"PostTag":[{"post_id":"ckqjgqag80001dsmp3jh8ad1b","tag_id":"ckqjgqagd0004dsmpduxg38c2","_id":"ckqjgqagi000adsmp3m6vc4u9"},{"post_id":"ckqjgqagb0002dsmpcxbg6tyd","tag_id":"ckqjgqagg0009dsmp9yvubzdj","_id":"ckqjgqagl000mdsmp54r0hocq"},{"post_id":"ckqjgqagb0002dsmpcxbg6tyd","tag_id":"ckqjgqagk000edsmpeoyydwjq","_id":"ckqjgqagl000ndsmp2ulk8d4e"},{"post_id":"ckqjgqagb0002dsmpcxbg6tyd","tag_id":"ckqjgqagk000hdsmp386s4tt5","_id":"ckqjgqagm000pdsmpb295a2cy"},{"post_id":"ckqjgqage0005dsmp5vo06hp5","tag_id":"ckqjgqagl000kdsmpd5hj34uv","_id":"ckqjgqagm000sdsmpdbxuchwj"},{"post_id":"ckqjgqage0005dsmp5vo06hp5","tag_id":"ckqjgqagl000odsmpbps1ckbh","_id":"ckqjgqagm000tdsmpbynl10oo"},{"post_id":"ckqjgqage0005dsmp5vo06hp5","tag_id":"ckqjgqagm000qdsmp2kvk9ypo","_id":"ckqjgqagn000vdsmp8a7fho8u"},{"post_id":"ckqjgqagf0006dsmp5z8tggp7","tag_id":"ckqjgqagl000kdsmpd5hj34uv","_id":"ckqjgqagn000ydsmpb0jf46nu"},{"post_id":"ckqjgqagf0006dsmp5z8tggp7","tag_id":"ckqjgqagm000udsmp85m1h4k3","_id":"ckqjgqagn000zdsmpdr3x7iup"},{"post_id":"ckqjgqagf0006dsmp5z8tggp7","tag_id":"ckqjgqagn000wdsmpevyn21l8","_id":"ckqjgqago0011dsmph4oj7sru"},{"post_id":"ckqjgqagg0007dsmp1r8cdlwb","tag_id":"ckqjgqagn000xdsmp0wh971k4","_id":"ckqjgqagp0017dsmp3gg6705v"},{"post_id":"ckqjgqagg0007dsmp1r8cdlwb","tag_id":"ckqjgqagn0010dsmp5sa4gy8u","_id":"ckqjgqagp0018dsmp54gf4em0"},{"post_id":"ckqjgqagg0007dsmp1r8cdlwb","tag_id":"ckqjgqago0012dsmp4t8n1hm6","_id":"ckqjgqagp0019dsmp5mo0g24r"},{"post_id":"ckqjgqagg0007dsmp1r8cdlwb","tag_id":"ckqjgqago0013dsmpcpylbss0","_id":"ckqjgqagp001adsmp1wgy2o0i"},{"post_id":"ckqjgqagg0007dsmp1r8cdlwb","tag_id":"ckqjgqago0014dsmpbhlqdj0y","_id":"ckqjgqagq001bdsmp5tgwehlq"},{"post_id":"ckqjgqagg0007dsmp1r8cdlwb","tag_id":"ckqjgqagp0015dsmp5ipx0clr","_id":"ckqjgqagq001cdsmp6yin0g6c"},{"post_id":"ckqjgqagi000bdsmp1dw20n4s","tag_id":"ckqjgqagg0009dsmp9yvubzdj","_id":"ckqjgqagq001ddsmp97m94yma"},{"post_id":"ckqjgqagi000bdsmp1dw20n4s","tag_id":"ckqjgqagp0016dsmp5ovrcrc4","_id":"ckqjgqagq001edsmpcdpr0fb7"}],"Tag":[{"name":"getting started","_id":"ckqjgqagd0004dsmpduxg38c2"},{"name":"Matlab","_id":"ckqjgqagg0009dsmp9yvubzdj"},{"name":"surf","_id":"ckqjgqagk000edsmpeoyydwjq"},{"name":"color","_id":"ckqjgqagk000hdsmp386s4tt5"},{"name":"python","_id":"ckqjgqagl000kdsmpd5hj34uv"},{"name":"lambda","_id":"ckqjgqagl000odsmpbps1ckbh"},{"name":"map","_id":"ckqjgqagm000qdsmp2kvk9ypo"},{"name":"Keras","_id":"ckqjgqagm000udsmp85m1h4k3"},{"name":"LN","_id":"ckqjgqagn000wdsmpevyn21l8"},{"name":"FFT","_id":"ckqjgqagn000xdsmp0wh971k4"},{"name":"STFT","_id":"ckqjgqagn0010dsmp5sa4gy8u"},{"name":"WT","_id":"ckqjgqago0012dsmp4t8n1hm6"},{"name":"HT","_id":"ckqjgqago0013dsmpcpylbss0"},{"name":"HHT","_id":"ckqjgqago0014dsmpbhlqdj0y"},{"name":"signal processing","_id":"ckqjgqagp0015dsmp5ipx0clr"},{"name":"transparency","_id":"ckqjgqagp0016dsmp5ovrcrc4"}]}}